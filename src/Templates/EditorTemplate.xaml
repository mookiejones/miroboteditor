<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:custom="http://metro.mahapps.com/winfx/xaml/shared"
                      xmlns:editor="clr-namespace:miRobotEditor.GUI.Editor"
                    xmlns:classes="clr-namespace:miRobotEditor.Classes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/miRobotEditor;component/Templates/Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <custom:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter"/>
    <xctk:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter"/>
    <Style x:Key="{x:Type classes:EditorClass}" TargetType="{x:Type classes:EditorClass}">        
        <Setter Property="Background" Value="{Binding BackgroundColor, Converter={StaticResource ColorToSolidColorBrushConverter}, Source={x:Static editor:EditorOptions.Instance}}"/>
        <Setter Property="BorderBrush" Value="{Binding BorderColor, Converter={StaticResource ColorToSolidColorBrushConverter}, Source={x:Static editor:EditorOptions.Instance}}"/>
        <Setter Property="Foreground" Value="{Binding FontColor, Converter={StaticResource ColorToSolidColorBrushConverter}, Source={x:Static editor:EditorOptions.Instance}}"/>
        <Setter Property="LineNumbersForeground" Value="{Binding Path=LineNumbersFontColor, Converter={StaticResource ColorToSolidColorBrushConverter}, Source={x:Static editor:EditorOptions.Instance}}"/>
        <Setter Property="ShowLineNumbers" Value="{Binding Path=ShowLineNumbers, Source={x:Static editor:EditorOptions.Instance}}"/>
        <Setter Property="BorderThickness" Value="{Binding Path=BorderThickness,Source={x:Static editor:EditorOptions.Instance}}"/>
        <Setter Property="Options" Value="{Binding Source = {x:Static editor:EditorOptions.Instance}}"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/> 
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="classes:EditorClass" >
                    <ControlTemplate.Resources>
                        <Style TargetType="avalonedit:TextArea">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="SelectionBrush"  Value="{Binding SelectedTextBackground, Converter={StaticResource ColorToSolidColorBrushConverter}, Source={x:Static editor:EditorOptions.Instance}}"/>

                            <!--        Foreground="{Binding ForegroundColor, Source={x:Static gui:EditorOptions.Instance}}" -->
                            <Setter Property="SelectionBorder" >
                                <Setter.Value>
                                    <Pen Thickness="{Binding SelectedBorderThickness, Source={x:Static editor:EditorOptions.Instance}}" Brush="{Binding SelectedBorderColor, Converter={StaticResource ColorToSolidColorBrushConverter}, Source={x:Static editor:EditorOptions.Instance}}"/>
                                </Setter.Value>
                            </Setter>




                            <Setter Property="SelectionForeground" Value="{Binding SelectedFontColor, Converter={StaticResource ColorToSolidColorBrushConverter}, Source={x:Static editor:EditorOptions.Instance}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type avalonedit:TextArea}">
                                        <DockPanel Focusable="False">
                                            <ItemsControl DockPanel.Dock="Left" Focusable="False" Margin="0,0,5,0" FontSize="10" FontFamily="Segoe UI" Padding="10,0,0,0" Background="#ADDEDEDE" ItemsSource="{Binding LeftMargins, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                            <ContentPresenter Panel.ZIndex="-1" Focusable="False" Content="{Binding TextView, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </DockPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </ControlTemplate.Resources>
                    <avalonedit:TextEditor  
                        Options="{TemplateBinding Options}"
                        ShowLineNumbers="{TemplateBinding ShowLineNumbers}"
                        AllowDrop="{TemplateBinding AllowDrop}" Background="{TemplateBinding Background}" BindingGroup="{TemplateBinding BindingGroup}"
                                             BorderBrush="{TemplateBinding BorderBrush}" WordWrap="{TemplateBinding WordWrap}"
                                             VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                             BorderThickness="{TemplateBinding BorderThickness}"
                         
                                             Visibility="{TemplateBinding Visibility}" FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                                             Uid="{TemplateBinding Uid}" Document="{TemplateBinding Document}" SyntaxHighlighting="{TemplateBinding SyntaxHighlighting}" 
            HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" 
            
            VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}">
                        <avalonedit:TextEditor.InputBindings>
                            <KeyBinding Command="{x:Static classes:EditorClass.GotoCommand}" CommandParameter="{Binding}" Key="G" Modifiers="Control" />
                            <KeyBinding Command="Find" Key="F" Modifiers="Control" />
                            <KeyBinding Command="{x:Static classes:EditorClass.ReplaceCommand}" Key="R" Modifiers="Control" />
                            <KeyBinding Key="F5" Command="{x:Static classes:EditorClass.ReloadCommand}" CommandParameter="{Binding}" />
                        </avalonedit:TextEditor.InputBindings>
                        <avalonedit:TextEditor.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Renumber _Lines" Command="{x:Static  classes:EditorClass.RenumberLinesCommand}" InputGestureText="Ctrl+L" Visibility="{Binding FanucVisibility}" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <MenuItem Header="Cut" Command="{Binding CutCommand}" InputGestureText="Ctrl+X">
                                    <MenuItem.Icon>
                                        <Image Source="/miRobotEditor;component/Resources/Cut.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Copy" Command="{Binding CopyCommand}" InputGestureText="Ctrl+C">
                                    <MenuItem.Icon>
                                        <Image Source="/miRobotEditor;component/Resources/Copy.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="_Paste" Command="{Binding PasteCommand}" InputGestureText="Ctrl+V">
                                    <MenuItem.Icon>
                                        <Image Source="/miRobotEditor;component/Resources/Paste.png" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="Open all Folds"  Command="{x:Static classes:EditorClass.OpenAllFoldsCommand}" CommandParameter="{Binding Workspace.ActiveEditor.TextBox,Source={StaticResource Locator}}" InputGestureText="Ctrl+M,O" IsTextSearchCaseSensitive="True" />
                                <MenuItem Header="Close all Folds" Command="{x:Static classes:EditorClass.CloseAllFoldsCommand}" CommandParameter="{Binding Workspace.ActiveEditor.TextBox,Source={StaticResource Locator}}" InputGestureText="Ctrl,+,M,L" />
                            </ContextMenu>
                        </avalonedit:TextEditor.ContextMenu>
                    </avalonedit:TextEditor>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    
    <Style  x:Key="FoldToolTipStyle" TargetType="{x:Type ToolTip}">
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}" >
                    <Border  BorderBrush="Black" Padding="10" BorderThickness="1"
                             Background="WhiteSmoke">
                        <StackPanel Orientation="Vertical">
                            <TextBlock FontSize="16" FontWeight="Bold" Text="{Binding Title}">
                                <TextBlock.Background>
                                    <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0,0" EndPoint="0,180">
                                        <GradientStop Color="WhiteSmoke" Offset="0.5" />
                                        <GradientStop Color="#FFDEDEDE" Offset="1" />
                                    </LinearGradientBrush>
                                </TextBlock.Background>
                            </TextBlock>
                            <Separator BorderThickness="5" BorderBrush="Black" />
                            <TextBlock Text="{Binding TextContent}" />
                            <Separator/>
                            <TextBlock Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






</ResourceDictionary>

