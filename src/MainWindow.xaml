<?xml version="1.0" encoding="utf-8"?>
<!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
<!-- ReSharper disable Xaml.StaticResourceNotResolved -->
<!-- Title="{Binding ActiveEditor.FilePath, Mode=OneWay, StringFormat=miRobotEditor:\= \{0\}}" -->

<mah:MetroWindow
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:classes="clr-namespace:miRobotEditor.Classes"
    xmlns:selectors="clr-namespace:miRobotEditor.Selectors"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ad="http://schemas.xceed.com/wpf/xaml/avalondock"
    xmlns:converters="clr-namespace:miRobotEditor.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:miRobotEditor.ViewModel"
    xmlns:miRobotEditor="clr-namespace:miRobotEditor"
    xmlns:editor="clr-namespace:miRobotEditor.GUI.Editor"
    xmlns:commands="clr-namespace:miRobotEditor.Commands"
    xmlns:controls="clr-namespace:miRobotEditor.Controls"
    mc:Ignorable="d"
    x:Name="MetroWindow"
    SnapsToDevicePixels="True"
    x:Class="miRobotEditor.MainWindow"
    WindowState="Maximized"
    Closing="WindowClosing"
    TitleForeground="Black"
    Loaded="WindowLoaded"
    AllowDrop="True"
    DataContext="{Binding Workspace,Source={StaticResource Locator}}"
    Drop="DropFiles"	DragEnter="onDragEnter" Icon="Properties/Resources/Editor.ico"  
>
    <mah:MetroWindow.Background>
        <LinearGradientBrush EndPoint="0,180" MappingMode="Absolute" StartPoint="0,0">
            <GradientStop Color="#FFDEDEDE" />
            <GradientStop Color="White" Offset="1" />
        </LinearGradientBrush>
    </mah:MetroWindow.Background>
    <Window.Resources>
        <!--Explorer Window-->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Templates/MenuDictionary.xaml"/>
                <ResourceDictionary Source="Templates/ImageTemplates.xaml" />
                <ResourceDictionary Source="Templates/ToolPaneTemplates.xaml" />
                <ResourceDictionary Source="Templates/StatusBarTemplate.xaml" />
                <ResourceDictionary Source="Templates/ArchiveInfoTemplate.xaml" />
                <ResourceDictionary Source="Templates/KUKASpecificTemplates.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.AvalonDock.Themes.Metro;component/Theme.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,/miRobotEditor.Resources;component/ResourceReferences/ImageResources.xaml"/>

            </ResourceDictionary.MergedDictionaries>
            <converters:TitleConverter x:Key="TitleConverter"/>

            <converters:ActiveEditorConverter x:Key="ActiveEditorConverter" />

            <!-- ReSharper disable Xaml.RedundantResource -->
            <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                <!-- ReSharper restore Xaml.RedundantResource -->
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <mah:MetroWindow.Title>
        <Binding Converter="{StaticResource TitleConverter}" TargetNullValue="miRobotEditor" NotifyOnSourceUpdated="True" Path="ActiveEditor.FilePath" StringFormat="miRobotEditor:= {0}"/>
    </mah:MetroWindow.Title>
    <mah:MetroWindow.Flyouts>
        <mah:Flyout Header="I/O" Position="Right" Content="{Binding ActiveEditor.FileLanguage.IOModel}" IsOpen="{Binding ShowIO}" />
        <controls:SettingsFlyout Position="Right"  IsOpen="{Binding ShowSettings}" />
    </mah:MetroWindow.Flyouts>
    <mah:MetroWindow.WindowCommands>
        <mah:WindowCommands>
            <Button Content="Settings" Command="{Binding ShowSettingsCommand, Mode=OneWay}" />
            <Button Content="Show IO" Command="{Binding ShowIOCommand,Mode=OneWay}" Visibility="{Binding EnableIO, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </mah:WindowCommands>
    </mah:MetroWindow.WindowCommands>
    <Window.InputBindings>
        <KeyBinding Command="{Binding ActiveEditor.CloseCommand,Mode=OneWay}"  Gesture="Alt+C" />
        <KeyBinding Key="F3" Modifiers="Shift" Command="Search" CommandParameter="something" />
        <KeyBinding Key="F" Modifiers="Control" Gesture="CTRL+F" Command="Find" />
        <KeyBinding Key="R" Modifiers="Shift+Control" Command="{Binding ShowFindReplaceCommand,Mode=OneWay}" />
        <KeyBinding Key="I" Modifiers="Control" Command="{x:Static commands:Commands.ToggleIntellisenseCommand}" CommandParameter="{Binding ActiveEditor.TextBox.Options}"  />

    </Window.InputBindings>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition	Height="48" />
            <RowDefinition  Height="*" />
            <RowDefinition 	Height="20" />
        </Grid.RowDefinitions>
        <controls:MenuControl/>
        <!-- Toolbar -->
        <StackPanel Orientation="Horizontal" Margin="10,0,0,0"  Grid.Row="1">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Height" Value="34" />
                    <Setter Property="Width" Value="34" />
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="10" Color="Gray" Opacity="0.25" Direction="270" />
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.30" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <!-- ReSharper disable Xaml.RedundantResource -->
                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                    <Setter Property="Height" Value="34" />
                    <Setter Property="Width" Value="34" />
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="IsThreeState" Value="False" />
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="10" Color="Black" Opacity="0.25" Direction="270" />
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="ToolTip" Value="Show Folds" />
                            <Setter Property="Content" Value="{StaticResource FoldingDisabled}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="ToolTip" Value="Hide Folds" />
                            <Setter Property="Content" Value="{StaticResource FoldingEnabled}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Height" Value="24" />
                    <Setter Property="Width" Value="24" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type ButtonBase}}}" Value="False">
                            <Setter Property="Opacity" Value="0.30" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>

            <Button Margin="5" Command="{Binding NewFileCommand}" Content="{StaticResource NewFileImage}" />
            <!-- Source="/ClassLibraryName;Component/images/myimage.png" -->
            <Button Command="{Binding OpenFileCommand}" Content="{Binding Mode=OneWay, Source={StaticResource FolderOpenImage}}" />

            <Button   Command="{Binding ActiveEditor.TextBox.SaveCommand,Mode=OneWay}" Content="{StaticResource SaveImage}" />

            <Button RenderTransformOrigin="0.5,0.5" Command="{Binding ActiveEditor.TextBox.UndoCommand,Mode=OneWay}" Content="{Binding Mode=OneWay, Source={StaticResource UndoImage}}" />

            <Button Command="{Binding ActiveEditor.TextBox.RedoCommand, Mode=OneWay}" Content="{Binding Mode=OneWay, Source={StaticResource RedoImage}}" />

            <Button Command="{Binding ActiveEditor.TextBox.CutCommand, Mode=OneWay}" Content="{Binding Mode=OneWay, Source={StaticResource CutImage}}" />
            <Button Command="{Binding ActiveEditor.TextBox.CopyCommand, Mode=OneWay}" Content="{StaticResource CopyImage}" />
            <Button Command="{Binding ActiveEditor.TextBox.PasteCommand, Mode=OneWay}" Content="{StaticResource PasteImage}" />
            <ToggleButton  IsChecked="{Binding EnableFolding, Source={x:Static editor:EditorOptions.Instance}}" />

            <Button ToolTip="Expand Folds"  Command="{x:Static classes:EditorClass.OpenAllFoldsCommand}" CommandParameter="{Binding ActiveEditor.TextBox}" Content="{StaticResource ExpandFoldsImage}" />

            <Button ToolTip="Collapse Folds" Command="{x:Static classes:EditorClass.CloseAllFoldsCommand}" CommandParameter="{Binding ActiveEditor.TextBox}" Content="{StaticResource CollapseFoldsImage}" />
            <Button  ToolTip="Decrease Indent"  Command="{Binding ActiveEditor.TextBox.ChangeIndentCommand}"  CommandParameter="false"  Content="{StaticResource DecreaseIndentImage}" />

            <Button  ToolTip="Increase Indent"  Command="{Binding ActiveEditor.TextBox.ChangeIndentCommand}"  CommandParameter="true" Content="{StaticResource IncreaseIndentImage}" />
        </StackPanel>
        <ad:DockingManager
			x:Name="DockManager"
            Background="Transparent"
			Grid.Row="2"
            AnchorablesSource="{Binding Tools}"
            DocumentsSource="{Binding Files}"
        	ActiveContent="{Binding ActiveEditor, Converter={StaticResource ActiveEditorConverter},Mode=TwoWay}"
            LayoutUpdateStrategy="{Binding LayoutStrategy}">
            <ad:DockingManager.Theme>
                <ad:MetroTheme />
            </ad:DockingManager.Theme>

            <!--             DocumentsSource="{Binding Files}"  -->

            <ad:DockingManager.LayoutItemContainerStyleSelector>
                <selectors:PanesStyleSelector>
                    <selectors:PanesStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type ad:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                        </Style>
                    </selectors:PanesStyleSelector.ToolStyle>
                    <selectors:PanesStyleSelector.FileStyle>
                        <Style TargetType="{x:Type ad:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="ToolTip" Value="{Binding Model.FilePath}" />
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                        </Style>
                    </selectors:PanesStyleSelector.FileStyle>
                </selectors:PanesStyleSelector>
            </ad:DockingManager.LayoutItemContainerStyleSelector>

            <ad:LayoutRoot>
                <ad:LayoutPanel Orientation="Vertical">
                    <ad:LayoutPanel Orientation="Horizontal">
                        <ad:LayoutAnchorablePaneGroup DockWidth="300">
                            <ad:LayoutAnchorablePane Name="LeftPane" />
                        </ad:LayoutAnchorablePaneGroup>
                        <ad:LayoutDocumentPane />
                        <ad:LayoutAnchorablePane Name="RightPane" DockWidth="250" />
                    </ad:LayoutPanel>
                    <ad:LayoutAnchorablePane Name="BottomPane" DockHeight="200" />
                </ad:LayoutPanel>
            </ad:LayoutRoot>
        </ad:DockingManager>
        <StatusBar DataContext="{x:Static viewModel:StatusBarViewModel.Instance}" Grid.Row="3">
            <StatusBar.Resources>
                <Style TargetType ="{x:Type StatusBarItem}">
                    <Setter Property="FontWeight" Value="Normal" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="FontWeight" Value="ExtraLight" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="FontWeight" Value="Normal" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="FontWeight" Value="ExtraLight" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StatusBar.Resources>
            <StatusBarItem DataContext="{x:Static miRobotEditor:WorkspaceViewModel.Instance}" Content="{Binding ActiveEditor.TextBox.Line, StringFormat=Line \{0\}}" ContentStringFormat="{Binding ActiveEditor.TextBox.Line, StringFormat=Line \{0\}}" ToolTip="Current Line" />
            <!-- ReSharper disable Xaml.RedundantAttachedProperty -->
            <StatusBarItem Grid.Column="1" DataContext="{x:Static miRobotEditor:WorkspaceViewModel.Instance}" ToolTip="Column Position" Content="{Binding ActiveEditor.TextBox.Column, StringFormat=Col \{0\}}" ContentStringFormat="{Binding ActiveEditor.TextBox.Column, StringFormat=Col \{0\}}" />
            <StatusBarItem Grid.Column="2" DataContext="{x:Static miRobotEditor:WorkspaceViewModel.Instance}" ToolTip="Offset Position of Caret" Content="{Binding ActiveEditor.TextBox.Offset, StringFormat=Offset \{0\}}" ContentStringFormat="{Binding ActiveEditor.TextBox.Offset, StringFormat=Offset \{0\}}" />
            <StatusBarItem Grid.Column="3" DataContext="{x:Static miRobotEditor:WorkspaceViewModel.Instance}" ToolTip="Robot Type" Content="{Binding ActiveEditor.FileLanguage.Name}" />
            <StatusBarItem Grid.Column="4" DataContext="{x:Static miRobotEditor:WorkspaceViewModel.Instance}" ToolTip="Last Modified" Content="{Binding ActiveEditor.TextBox.FileSave}" />
            <StatusBarItem Grid.Column="5" Content="INS"  ToolTip="Insert Mode" IsEnabled="{Binding IsInsPressed}" />
            <StatusBarItem Grid.Column="6" Content="CAPS" ToolTip="Caps Lock"   IsEnabled="{Binding IsCapsPressed}" />
            <StatusBarItem Grid.Column="7" Content="SCR" ToolTip="Scroll Lock"  IsEnabled="{Binding IsScrollPressed}" />
            <StatusBarItem Grid.Column="8" Content="NUM" ToolTip="Number Lock" IsEnabled="{Binding IsNumPressed}" />
            <!-- ReSharper restore Xaml.RedundantAttachedProperty -->

        </StatusBar>
    </Grid>
</mah:MetroWindow>