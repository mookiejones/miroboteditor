<?xml version="1.0" encoding="utf-8"?>
<Controls:MetroWindow
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:Classes="clr-namespace:miRobotEditor.Classes" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ad="http://avalondock.codeplex.com"
                      xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit"
                      xmlns:AngleConverter="clr-namespace:miRobotEditor.GUI.AngleConverter" xmlns:GUI="clr-namespace:miRobotEditor.GUI" 
                      xmlns:Behaviour="clr-namespace:miRobotEditor.Behaviour" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                      xmlns:ftpBrowser="clr-namespace:miRobotEditor.Pads.FTPBrowser"
					  xmlns:Templates="clr-namespace:miRobotEditor.Templates"
                      xmlns:explorer="clr-namespace:miRobotEditor.GUI.ExplorerControl"
				      xmlns:ViewModels="clr-namespace:miRobotEditor.ViewModel"
                      xmlns:System="clr-namespace:System;assembly=mscorlib"
        			  xmlns:commands="clr-namespace:miRobotEditor.Commands"
					  xmlns:converters="clr-namespace:miRobotEditor.Converters"
					  xmlns:local="clr-namespace:miRobotEditor" x:Name="metroWindow"
                      SnapsToDevicePixels="True"
                      x:Class="miRobotEditor.MainWindow"	WindowState="Maximized"	Closing="WindowClosing"
                      Title="{Binding ActiveEditor.Filename, StringFormat=miRobotEditor:\= \{0\}}"


    Loaded="WindowLoaded"	AllowDrop="True"	Icon="Properties/Resources/Editor.ico"	Drop="DropFiles"	DragEnter="onDragEnter">  
    <Controls:MetroWindow.Background>
            <LinearGradientBrush MappingMode="Absolute" StartPoint="0,0" EndPoint="0,180">
                <GradientStop Color="#FFDEDEDE" />
                <GradientStop Color="White" Offset="1" />
            </LinearGradientBrush>
    </Controls:MetroWindow.Background>
    <Window.DataContext>
        <local:Workspace/>
    </Window.DataContext>
    <Controls:MetroWindow.Resources>   
        <!--Explorer Window-->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Templates/ToolPaneTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>
        <explorer:FileExplorerWindow x:Key="ExplorerWindow"/>      
        <converters:ActiveEditorConverter x:Key="ActiveEditorConverter"/>
        <Style TargetType="{x:Type ad:LayoutAnchorableItem}">
            <Setter Property="Visibility" Value="{Binding Visible}"/>
        </Style>
        </ResourceDictionary>

    </Controls:MetroWindow.Resources>
  
    <i:Interaction.Behaviors>
        <Behaviours:BorderlessWindowBehavior/>
    </i:Interaction.Behaviors>
    <Controls:MetroWindow.InputBindings>
    	<KeyBinding Command="{Binding CloseWindowCommand}" Gesture="Alt+C"/>
        <KeyBinding Key="F3" Modifiers="Shift" Command="Search" CommandParameter="something" />      
        <KeyBinding Key="F" Modifiers="Control" Gesture="CTRL+F" Command="Find" />
    </Controls:MetroWindow.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="58" />
            <RowDefinition	Height="48" />
            <RowDefinition  Height="*" />
            <RowDefinition  Height="*" />
            <RowDefinition 	Height="20" />
        </Grid.RowDefinitions>
        <TextBlock TextWrapping="Wrap" VerticalAlignment="Top" TextBlock.FontWeight="Bold" TextBlock.FontSize="10.667" Margin="30,10,0,0" Visibility="Collapsed"><Run Text="Mark"/></TextBlock>
        <Menu IsMainMenu="True" Margin="30,9,0,0" Background="Transparent">
            <Menu.Resources>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Height" Value="16"/>
                    <Setter Property="Width" Value="16"/>
                </Style>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="Background" Value="Transparent"/>
            		<Style.Triggers>
                		<Trigger Property="IsEnabled" Value="False">
            				<Setter Property="Opacity" Value="10"/>
            			</Trigger>
                	</Style.Triggers>
                </Style>
            </Menu.Resources>

            <MenuItem  Header="_File">
                <MenuItem Header="_New" Command="{Binding NewFileCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/newfile.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Open" Command="{Binding OpenFileCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources\folder_open.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Save" Command="{Binding ActiveEditor.TextBox.SaveCommand, Mode=OneWay}">
                    <MenuItem.Icon>
                        <Image Source="/Resources\Save.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save _As" Command="{Binding ActiveEditor.TextBox.SaveAsCommand, Mode=OneWay}">
                    <MenuItem.Icon>
                        <Image Source="/Resources\save_all.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem	Header="Reload"  Command="{Binding ActiveEditor.TextBox.ReloadCommand, Mode=OneWay}" />
                <Separator />
                <MenuItem Header="_Import" Command="{Binding ImportCommand}" />
                <MenuItem Header="Print"  Command="ApplicationCommands.Print">
                    <MenuItem.Icon>
                        <Image Source="/Resources\Print.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Print P_review"  Command="ApplicationCommands.PrintPreview">
                    <MenuItem.Icon>
                        <Image Source="/Resources\print_preview.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Close" Command="{Binding CloseWindowCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources\close.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Classes:RecentFileList   />
                <MenuItem Header="E_xit"  Command="{Binding ExitCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Resources\exit.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="Undo" Command="{Binding ActiveEditor.TextBox.UndoCommand, Mode=OneWay}">
                    <MenuItem.Icon>
                        <Image Source="/Resources\Redo.png" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="-1" />
                            </Image.RenderTransform>
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Redo" Command="{Binding ActiveEditor.TextBox.RedoCommand, Mode=OneWay}">
                    <MenuItem.Icon>
                        <Image Source="/Resources\Redo.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Cut" Command="{Binding ActiveEditor.TextBox.CutCommand, Mode=OneWay}">
                    <MenuItem.Icon>
                        <Image Source="/Resources\Cut.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Copy" Command="{Binding ActiveEditor.TextBox.CopyCommand, Mode=OneWay}">
                    <MenuItem.Icon>
                        <Image Source="/Resources\Copy.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Paste" Command="{Binding ActiveEditor.TextBox.PasteCommand, Mode=OneWay}">
                    <MenuItem.Icon>
                        <Image Source="/Resources\Paste.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Delete" CommandTarget="{Binding ActiveEditor.TextBox}" Command="ApplicationCommands.Delete" ToolTip="Deletes the current line." />
                <MenuItem Header="Delete _Line" CommandTarget="{Binding ActiveEditor.TextBox}" Command="ae:AvalonEditCommands.DeleteLine" ToolTip="Deletes the current line." />
                <MenuItem Header="Select _All" CommandTarget="{Binding ActiveEditor.TextBox}" Command="ApplicationCommands.SelectAll" ToolTip="Select All of Document.">
                    <MenuItem.Icon>
                        <Image Source="/Resources\select_all.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Comment Selection" CommandTarget="{Binding ActiveEditor.TextBox}">
                    <MenuItem.Icon>
                        <Image Source="/Resources\comment.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Formatting" x:Name="Formatting">
                    <!-- ReSharper disable Xaml.StaticResourceNotResolved -->
                    <MenuItem Header="View Whitespace" IsCheckable="True" IsChecked="{Binding ShowSpaces, Source={StaticResource TextOptions}}" />
                    <!-- ReSharper restore Xaml.StaticResourceNotResolved -->
                    <MenuItem Header="Wordwrap" IsChecked="{Binding WrapWords, Source={StaticResource TextOptions}}" />
                    <Separator />
                    <MenuItem Header="Toggle Comment" />
                    <Separator />
                    <MenuItem Header="Increase Line Indent" />
                    <MenuItem Header="Decrease Line Indent" />
                    <MenuItem Header="Remove Leading Whitespace" CommandTarget="{Binding ActiveEditor.TextBox}" Command="ae:AvalonEditCommands.RemoveLeadingWhitespace" />
                    <MenuItem Header="Remove Trailing Whitespace" CommandTarget="{Binding ActiveEditor.TextBox}" Command="ae:AvalonEditCommands.RemoveTrailingWhitespace" />
                    <MenuItem Header="To Uppercase" CommandTarget="{Binding ActiveEditor.TextBox}" Command="ae:AvalonEditCommands.ConvertToUppercase" />
                    <MenuItem Header="To Lowercase" CommandTarget="{Binding ActiveEditor.TextBox}" Command="ae:AvalonEditCommands.ConvertToLowercase" />
                    <MenuItem Header="Capitalize" CommandTarget="{Binding ActiveEditor.TextBox}" Command="ae:AvalonEditCommands.ConvertToTitleCase" />
                    <MenuItem Header="Invert Case" CommandTarget="{Binding ActiveEditor.TextBox}" Command="ae:AvalonEditCommands.InvertCase" />
                    <Separator />
                    <MenuItem Header="Tabs to Spaces"  CommandTarget="{Binding ActiveEditor.Textbox}" Command="ae:AvalonEditCommands.ConvertTabsToSpaces" />
                    <MenuItem Header="Spaces to Tabs"  CommandTarget="{Binding ActiveEditor.Textbox}" Command="ae:AvalonEditCommands.ConvertSpacesToTabs" />
                    <MenuItem Header="Leading tabs to spaces"  CommandTarget="{Binding ActiveEditor.Textbox}" Command="ae:AvalonEditCommands.ConvertLeadingTabsToSpaces" />
                    <MenuItem Header="Leading spaces to tabs"  CommandTarget="{Binding ActiveEditor.Textbox}" Command="ae:AvalonEditCommands.ConvertLeadingSpacesToTabs" />
                    <MenuItem Header="Indent Selection"  CommandTarget="{Binding ActiveEditor.Textbox}" Command="ae:AvalonEditCommands.IndentSelection" />
                </MenuItem>

                <MenuItem Header="Find" Command="ApplicationCommands.Find" CommandTarget="{Binding ActiveEditor.Textbox}"/>
                <MenuItem Header="Find Next" Command="ae:SearchCommands.FindNext"  CommandTarget="{Binding ActiveEditor.Textbox}"/>
                <MenuItem Header="Find Previous" Command="ae:SearchCommands.FindPrevious" CommandTarget="{Binding ActiveEditor.Textbox}" />
                <MenuItem Header="Cancel Search" Command="ae:SearchCommands.CloseSearchPanel" CommandTarget="{Binding ActiveEditor.Textbox}" />

                <Separator />
                <MenuItem Header="Go To..." CommandTarget="{Binding ActiveEditor.TextBox}" />
                <MenuItem Header="Folding">
                    <MenuItem Header="_Open All Folds" Command="{Binding ActiveEditor.TextBox.OpenAllFoldsCommand, Mode=OneWay}"  />
                    <MenuItem Header="_Close All Folds" Command="{Binding ActiveEditor.TextBox.CloseAllFoldsCommand, Mode=OneWay}" />
                    <MenuItem Header="Toggle Current Fold" Command="{Binding ActiveEditor.TextBox.ToggleFoldsCommand}"  />
                    <MenuItem Header="Toggle All Folds" Command="{Binding  ActiveEditor.TextBox.ToggleAllFoldsCommand}" />
                    <MenuItem Header="Show Definitions Only" Command="{Binding ShowDefinitions}" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Environment">
                    <ComboBox >
                        <ComboBoxItem/>
                        <ComboBoxItem Content="KUKA KRC2"/>
                        <ComboBoxItem Content="KUKA KRC4"/>
                        <ComboBoxItem Content="ABB"/>
                        <ComboBoxItem Content="Kawasaki"/>
                        <ComboBoxItem Content="Nachi"/>
                    </ComboBox>
                </MenuItem>
                <!-- ReSharper disable Xaml.StaticResourceNotResolved -->
                <MenuItem Header="View Whitespace" IsCheckable="true" IsChecked="{Binding ShowSpaces, BindsDirectlyToSource=True, Source={StaticResource TextOptions}}" />

                <MenuItem Header="View EOL" IsCheckable="true" IsChecked="{Binding ShowEndOfLine, Source={StaticResource TextOptions}}"/>

                <MenuItem Header="View Tabs" IsCheckable="true" IsChecked="{Binding ShowTabs, Source={StaticResource TextOptions}}" />
                <!-- ReSharper restore Xaml.StaticResourceNotResolved -->
                <MenuItem Header="Wordwrap" Command="{Binding WrapWords, Source={StaticResource TextOptions}}" IsChecked="{Binding WrapWords, Source={StaticResource TextOptions}}" />
                <MenuItem Header="Line Numbers" IsChecked="{Binding ShowLineNumbers, Source={StaticResource TextOptions}}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/line_numbers.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Windows">
                
                </MenuItem>
                <MenuItem Header="View _as">
                    <MenuItem Header="ABB" Command="{Binding ChangeViewAsCommand}" CommandParameter="ABB" />
                    <MenuItem Header="KUKA" Command="{Binding ChangeViewAsCommand}" CommandParameter="KUKA" />
                    <MenuItem Header="Fanuc" Command="{Binding ChangeViewAsCommand}" CommandParameter="Fanuc"/>
                    <MenuItem Header="Nachi" Command="{Binding ChangeViewAsCommand}" CommandParameter="Nachi" />
                    <MenuItem Header="Kawasaki" Command="{Binding ChangeViewAsCommand}" CommandParameter="Kawasaki" />
                </MenuItem>
            </MenuItem>
            <MenuItem  Header="Tools">
                <MenuItem Header="Angle Converter" Command="{Binding AddToolCommand}"  CommandParameter="Angle Converter"/>
                <MenuItem Header="Options" Command="{Binding ShowOptionsCommand}" />
            </MenuItem>
            <MenuItem Header="Window">
                <MenuItem Header="Windows">
                    <MenuItem Header="Functions"  Command="{Binding AddToolCommand}" CommandParameter="Functions"/>
                    <MenuItem Header="Object Browser"  Command="{Binding AddToolCommand}"  CommandParameter="Object Browser" />
                    <MenuItem Header="Explorer"  Command="{Binding AddToolCommand}"  CommandParameter="Explorer" />
                    <MenuItem Header="Angle Converter"  Command="{Binding AddToolCommand}"  CommandParameter="Angle Converter" />
                    <MenuItem Header="Notes"  Command="{Binding AddToolCommand}"  CommandParameter="Notes" />
                    <MenuItem Header="Output Window"  Command="{Binding AddToolCommand}"  CommandParameter="Output Window" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Robot" >
                <MenuItem Header="Shift Program" Command="{Binding AddToolCommand}" CommandParameter="Shift"/>
                <MenuItem Header="KUKA">
                    <MenuItem Header="CleanDat"  Command="{Binding AddToolCommand}"  CommandParameter="CleanDat"/>
                    <MenuItem Header="Rename Positions"  Command="{Binding AddToolCommand}" />
                    <MenuItem Header="ReverseOrder"/>
                    <MenuItem Header="Mirror"/>
                    <MenuItem Header="Adjust Status/Turn"/>
                    <MenuItem Header="Sort DataList"/>
                    <MenuItem Header="View I/O List"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_View Help" />
                <MenuItem Header="Report a _Bug" />
                <MenuItem Header="_About" Command="{Binding ShowAboutCommand}"/>
            </MenuItem>
        </Menu>
       
        <Rectangle HorizontalAlignment="Left" Stroke="#FF000000" Width="10" StrokeThickness="0" Margin="0,10,0,0">
            <Rectangle.Fill>
                <SolidColorBrush Color="{DynamicResource HighlightDarkColor}" />
            </Rectangle.Fill>
        </Rectangle>
        <!-- Toolbar -->
        <StackPanel
			Orientation="Vertical"
			Grid.Column="0"
			Grid.Row="1"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch">
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>

                    <Style TargetType="{x:Type Button}" >
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Height" Value="34"/>
                        <Setter Property="Width" Value="34"/>
                        <Setter Property="Margin" Value="5"/>
                    </Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Height" Value="34"/>
                        <Setter Property="Width" Value="34"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="Red"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Height" Value="24"/>
                        <Setter Property="Width" Value="24"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type ButtonBase}}}" Value="False">
                                <Setter Property="Opacity" Value="0.30" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                <StackPanel.Effect>
                    <DropShadowEffect BlurRadius="10" Color="Black" Opacity="0.25" Direction="270" />
                </StackPanel.Effect>
                <Button Margin="5" Command="{Binding NewFileCommand}"    >
                    <Image Source="/Resources\newfile.png" />
                </Button>
                <Button Command="{Binding OpenFileCommand}" >
                    <Image Source="/Resources\folder_open.png" />
                </Button>
                <Button   Command="{Binding ActiveEditor.TextBox.SaveFileCommand,Mode=OneWay}" >
                    <Image Source="/Resources\Save.png" />
                </Button>
                <Button RenderTransformOrigin="0.5,0.5" Command="{Binding ActiveEditor.TextBox.UndoCommand, Mode=OneWay}"   >
                    <Button.RenderTransform>
                        <ScaleTransform ScaleX="1" />
                    </Button.RenderTransform>
                    <Image Source="/Resources\Redo.png" RenderTransformOrigin="0.5,0.5"   >
                        <Image.RenderTransform>
                            <ScaleTransform ScaleX="-1" />
                        </Image.RenderTransform>
                    </Image>
                </Button>
                <Separator/>
                <Button Command="{Binding ActiveEditor.TextBox.RedoCommand, Mode=OneWay}"   >
                    <Image Source="/Resources\Redo.png" />
                </Button>
                <Button Command="{Binding ActiveEditor.TextBox.CutCommand, Mode=OneWay}"   >
                    <Image Source="/Resources\Cut.png" />
                </Button>
                <Button Command="{Binding ActiveEditor.TextBox.Copy, Mode=OneWay}"   >
                    <Image Source="/Resources\Copy.png" />
                </Button>
                <Button Command="{Binding ActiveEditor.TextBox.PasteCommand, Mode=OneWay}"   >
                    <Image Source="/Resources\Paste.png" />
                </Button>
                <!-- ReSharper disable Xaml.StaticResourceNotResolved -->
                <ToggleButton IsTabStop="False">
                    <ToggleButton.Resources>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="ToolTip" Value="Show Folds"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ToolTip" Value="Hide Folds"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Resources>
                    <ToggleButton.IsChecked>
                        <Binding NotifyOnTargetUpdated="True" NotifyOnSourceUpdated="True" Path="EnableFolding" Source="{StaticResource TextOptions}"/>
                    </ToggleButton.IsChecked>
                                      <!-- ReSharper restore Xaml.StaticResourceNotResolved -->
                    <Image Source="/Resources\togglefolding.png" />
                </ToggleButton>
                <Button ToolTip="Expand Folds"  Command="{Binding ActiveEditor.TextBox.OpenAllFoldsCommand, Mode=OneWay}"     >
                    <Image Source="/Resources\expandfolds.png" />
                </Button>
                <Button ToolTip="Collapse Folds" Command="{Binding ActiveEditor.TextBox.CloseAllFoldsCommand, Mode=OneWay}"    >
                    <Image Source="/Resources\collapsefolds.png" />
                </Button>
                <Button  ToolTip="Decrease Indent"  Command="{Binding ActiveEditor.TextBox.ChangeIndentCommand}"  CommandParameter="false"  >
                    <Image Source="/Resources\increaseindent.png" RenderTransformOrigin="0.5,0.5" >
                		<Image.RenderTransform>
                    	  	<ScaleTransform ScaleX="-1" />
                    	</Image.RenderTransform>
                	</Image>

                </Button>
                <Button  ToolTip="Increase Indent"  Command="{Binding ActiveEditor.TextBox.ChangeIndentCommand}"  CommandParameter="true"  >
                    <Image Source="/Resources\increaseindent.png" />
                </Button>
        		
            </StackPanel>
        </StackPanel>
        <ad:DockingManager
			AllowMixedOrientation="True"
			x:Name="dockManager"
            Background="Transparent"
			Grid.Row="2"        	
            
        	ActiveContent="{Binding ActiveEditor, Mode=TwoWay, NotifyOnSourceUpdated=True}"
			Grid.RowSpan="2" DocumentClosing="dockManager_DocumentClosing">
        	<!--             DocumentsSource="{Binding Files}"  -->
            <ad:DockingManager.Effect>
                <DropShadowEffect BlurRadius="10" Color="Black" Opacity="0.25" Direction="270" />
            </ad:DockingManager.Effect>        	
            <ad:DockingManager.DocumentHeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </ad:DockingManager.DocumentHeaderTemplate>
            <ad:LayoutRoot>
                <ad:LayoutPanel Orientation="Vertical">
                    <ad:LayoutPanel Orientation="Horizontal">
                        <ad:LayoutAnchorablePaneGroup DockWidth="300" >
                            <ad:LayoutAnchorablePane >
								<ad:LayoutAnchorable Title="Project Explorer">
                            	<Templates:ProjectExplorerTemplate/>
                            	</ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="Explorer" CanAutoHide="True" CanClose="True" Content="{StaticResource ExplorerWindow}"/>
                                <ad:LayoutAnchorable Title="FTP Accounts">
                                    <ftpBrowser:FtpAccountWindow/>
                                </ad:LayoutAnchorable>
                            </ad:LayoutAnchorablePane>
                        </ad:LayoutAnchorablePaneGroup>
                        <ad:LayoutDocumentPaneGroup>
                            <ad:LayoutDocumentPane/>
                        </ad:LayoutDocumentPaneGroup>
                        <ad:LayoutAnchorablePaneGroup DockWidth="250">
                            <ad:LayoutAnchorablePane>
                                <ad:LayoutAnchorable Title="Functions" CanAutoHide="True" CanClose="False" >
                                    <ListView DataContext="{Binding ActiveEditor.TextBox}"	Background="White"	Foreground="Black"	 ItemTemplate="{DynamicResource FunctionItemTemplate}" >
                                        <ListView.Resources>
                                            <Style TargetType="{x:Type ListViewItem}">
                                                <EventSetter Event="MouseDoubleClick" Handler="OpenFunction"/>
                                            </Style>
                                        </ListView.Resources>
                                        <ListView.SelectedItem>
                                            <Binding Path="SelectedVariable" />
                                        </ListView.SelectedItem>
                                        <ListView.ItemsSource>
                                            <Binding Path="Variables" Mode="OneWay" NotifyOnSourceUpdated="True"/>
                                        </ListView.ItemsSource>
                                    </ListView>                                  
								</ad:LayoutAnchorable>
                                <AngleConverter:AngleConverterWpf/>
                              
                            </ad:LayoutAnchorablePane>
                        </ad:LayoutAnchorablePaneGroup>
                    </ad:LayoutPanel>
                    <ad:LayoutAnchorablePaneGroup DockHeight="200" >
                        <ad:LayoutAnchorablePane>
                            <ad:LayoutAnchorable Title="Output Window" CanAutoHide="True" IconSource="Resources\error.png">
                                <ViewModels:MessageViewModel x:Name="Output"/>
                            </ad:LayoutAnchorable>                           
                            <ad:LayoutAnchorable Title="Notes">
                                <TextBox TextWrapping="WrapWithOverflow" />
                            </ad:LayoutAnchorable>
                            <ad:LayoutAnchorable
								Title="Object Browser"
								CanAutoHide="True"
								CanClose="False"
								IconSource="Resources\objectbrowser.png"
								IsVisible="False"
								CanHide="True">
                                <ViewModels:ObjectBrowserViewModel/>
                            </ad:LayoutAnchorable>
                            <ad:LayoutAnchorable Title="Locals" CanAutoHide="True" CanClose="False" CanHide="True"  >
                            	<Templates:VisualVariableItem ItemsSource="{Binding ActiveEditor.TextBox.Variables, NotifyOnSourceUpdated=True}"/>
                            </ad:LayoutAnchorable>
                        </ad:LayoutAnchorablePane>
                    </ad:LayoutAnchorablePaneGroup>
                </ad:LayoutPanel>
            </ad:LayoutRoot>
        </ad:DockingManager>

        <StatusBar>
            <StatusBarItem Grid.Column="2">
                <TextBlock ToolTip="CurrentLine" Text="{Binding Instance.Line,StringFormat=Line \{0\}}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <TextBlock ToolTip="Column Position" Text="{Binding Instance.Column,StringFormat=Col \{0\}}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <TextBlock ToolTip="Offset Position of Caret" Text="{Binding ActiveEditor.TextBox.Offset}" TextAlignment="Center" />
            </StatusBarItem>
            <StatusBarItem	Grid.Column="5">
                <TextBlock ToolTip="Robot Type" Text="{Binding Instance.Robot, BindsDirectlyToSource=True, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="6">
                <TextBlock ToolTip="Last Modified" Text="{Binding Instance.FileSave}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="7">
                <TextBlock Text="INS" IsEnabled="{Binding IsInsPressed}" TextAlignment="Center" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="8">
                <TextBlock Text="CAPS" ToolTip="Caps Lock" IsEnabled="{Binding IsCapsPressed}" TextAlignment="Center" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="9">
                <TextBlock Text="SCR" ToolTip="Scroll Lock" IsEnabled="{Binding IsScrollPressed}" TextAlignment="Center" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="10">
                <TextBlock Text="NUM" ToolTip="Number Lock" IsEnabled="{Binding IsNumPressed, BindsDirectlyToSource=True}" TextAlignment="Center" />
            </StatusBarItem>
        </StatusBar>
               
    </Grid>
</Controls:MetroWindow>
    