<mah:MetroWindow x:Class="miRobotEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:ad="http://schemas.xceed.com/wpf/xaml/avalondock"

        xmlns:ignore="http://www.ignore.com"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:views="clr-namespace:miRobotEditor.Views"
                 xmlns:gui="clr-namespace:miRobotEditor.EditorControl;assembly=miRobotEditor.EditorControl"
                 xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
                 xmlns:classes="clr-namespace:miRobotEditor.Core.Classes;assembly=miRobotEditor.Core"
                 xmlns:converters="clr-namespace:miRobotEditor.Core.Converters;assembly=miRobotEditor.Core"
                 mc:Ignorable="d ignore"
       
                     Title="{Binding Title, Mode=OneWay, StringFormat=miRobotEditor:\= \{0\}}"
     SnapsToDevicePixels="True"
WindowState="Maximized"
                 Closing="WindowClosing"
                 TitleForeground="Black"
    Loaded="WindowLoaded"
    AllowDrop="True"
    Drop="DropFiles" Background="{DynamicResource WindowBackgroundBrush}"	

       >
    <mah:MetroWindow.DataContext>
        <Binding Mode="OneWay" Path="Main" Source="{StaticResource Locator}" />
    </mah:MetroWindow.DataContext>
   
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/MainSkin.xaml" />
                <ResourceDictionary Source="Templates/ToolPaneTemplates.xaml" />
                <ResourceDictionary Source="Templates/StatusBarTemplate.xaml" />
                <ResourceDictionary Source="Templates/ArchiveInfoTemplate.xaml" />
                <ResourceDictionary Source="Templates/KUKASpecificTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <converters:ActiveEditorConverter x:Key="ActiveEditorConverter" />
            <gui:EditorOptions x:Key="EditorOptions" />
            <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                <!-- ReSharper restore Xaml.RedundantResource -->
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl>
            <mah:Flyout Header="I/O" Position="Right" Content="{Binding ActiveEditor.FileLanguage.IOModel}"
                        IsOpen="{Binding ShowIO}" />
            <!-- mah:Flyout Header="Options" Position="Right"  Content="{x:Static gui:EditorOptions.Instance}" IsOpen="{Binding ShowSettings}" -->

            <mah:Flyout Header="Options" Position="Right" Content="{StaticResource EditorOptions}"
                        IsOpen="{Binding ShowSettings}">
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>
       
        <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <ToggleButton Content="Settings" Command="{Binding ShowSettingsCommand}" />
            <ToggleButton Content="Show IO" Command="{Binding ShowIOCommand}"
                          Visibility="{Binding EnableIO, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <mah:MetroWindow.GlowBrush>
        <SolidColorBrush Color="{DynamicResource HighlightLightColor}" />
    </mah:MetroWindow.GlowBrush>
    <Window.InputBindings>
        <KeyBinding Command="{Binding ActiveEditor.CloseCommand}" Gesture="Alt+C" />
        <KeyBinding Key="F3" Modifiers="Shift" Command="Search" CommandParameter="something" />
        <KeyBinding Key="F" Modifiers="Control" Gesture="CTRL+F" Command="Find" />
        <KeyBinding Key="R" Modifiers="Shift+Control" Command="{Binding ShowFindReplaceCommand}" />
    </Window.InputBindings>
    <Grid x:Name="LayoutRoot" d:DataContext="{d:DesignInstance}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="48" />
            <RowDefinition Height="*" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>
        <Menu Background="Transparent" IsMainMenu="True" Margin="10,2,0,0">
            <Menu.Resources>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Width" Value="16" />
                </Style>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="10" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Menu.Resources>

            <MenuItem Header="_File">
                <MenuItem Header="_New" Command="{Binding NewFileCommand}">

                </MenuItem>
                <MenuItem Header="_Open" Command="{Binding OpenFileCommand}">

                </MenuItem>
                <MenuItem Header="_Save" Command="{Binding ActiveEditor.TextBox.SaveCommand, Mode=OneWay}">

                </MenuItem>
                <MenuItem Header="Save _As" Command="{Binding ActiveEditor.TextBox.SaveAsCommand, Mode=OneWay}">

                </MenuItem>
                <Separator />
                <MenuItem Header="Reload" Command="{Binding ActiveEditor.TextBox.ReloadCommand, Mode=OneWay}" />
                <Separator />
                <MenuItem Header="_Import" Command="{Binding ImportCommand}" />
                <MenuItem Header="Print" Command="ApplicationCommands.Print">

                </MenuItem>
                <MenuItem Header="Print P_review" Command="ApplicationCommands.PrintPreview">

                </MenuItem>
                <MenuItem Header="_Close" Command="{Binding ActiveEditor.CloseCommand}">

                </MenuItem>
                <!--
                <MenuItem Header="Recent _Files">
                    <classes:RecentFileList />
                </MenuItem> -->
                <MenuItem Header="E_xit" Command="{Binding ExitCommand}">

                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="Undo" Command="{Binding ActiveEditor.TextBox.UndoCommand, Mode=OneWay}">
                  
                </MenuItem>
                <MenuItem Header="Redo" Command="{Binding ActiveEditor.TextBox.RedoCommand, Mode=OneWay}">
                   
                </MenuItem>
                <Separator />
                <MenuItem Header="Cut" Command="{Binding ActiveEditor.TextBox.CutCommand, Mode=OneWay}">

                </MenuItem>
                <MenuItem Header="Copy" Command="{Binding ActiveEditor.TextBox.CopyCommand, Mode=OneWay}">

                </MenuItem>
                <MenuItem Header="Paste" Command="{Binding ActiveEditor.TextBox.PasteCommand, Mode=OneWay}">
                </MenuItem>
                <MenuItem Header="_Delete" CommandTarget="{Binding ActiveEditor.TextBox}"
                          Command="ApplicationCommands.Delete" ToolTip="Deletes the current line." />
                <MenuItem Header="Delete _Line" CommandTarget="{Binding ActiveEditor.TextBox}"
                          Command="avalonedit:AvalonEditCommands.DeleteLine" ToolTip="Deletes the current line." />
                <MenuItem Header="Select _All" CommandTarget="{Binding ActiveEditor.TextBox}"
                          Command="ApplicationCommands.SelectAll" ToolTip="Select All of Document.">
                </MenuItem>
                <Separator />
                <MenuItem Header="Comment Selection" CommandTarget="{Binding ActiveEditor.TextBox}">

                </MenuItem>
                <Separator />
                <MenuItem Header="Formatting" x:Name="Formatting">
                    <MenuItem Header="View Whitespace" IsCheckable="True"
                              IsChecked="{Binding ShowSpaces, Source={x:Static gui:EditorOptions.Instance}}" />
                    <MenuItem Header="Wordwrap"
                              IsChecked="{Binding WrapWords, Source={x:Static gui:EditorOptions.Instance}}" />
                    <Separator />
                    <MenuItem Header="Toggle Comment" />
                    <Separator />
                    <MenuItem Header="Increase Line Indent" />
                    <MenuItem Header="Decrease Line Indent" />
                    <MenuItem Header="Remove Leading Whitespace" CommandTarget="{Binding ActiveEditor.TextBox}"
                              Command="avalonedit:AvalonEditCommands.RemoveLeadingWhitespace" />
                    <MenuItem Header="Remove Trailing Whitespace" CommandTarget="{Binding ActiveEditor.TextBox}"
                              Command="avalonedit:AvalonEditCommands.RemoveTrailingWhitespace" />
                    <MenuItem Header="To Uppercase" CommandTarget="{Binding ActiveEditor.TextBox}"
                              Command="avalonedit:AvalonEditCommands.ConvertToUppercase" />
                    <MenuItem Header="To Lowercase" CommandTarget="{Binding ActiveEditor.TextBox}"
                              Command="avalonedit:AvalonEditCommands.ConvertToLowercase" />
                    <MenuItem Header="Capitalize" CommandTarget="{Binding ActiveEditor.TextBox}"
                              Command="avalonedit:AvalonEditCommands.ConvertToTitleCase" />
                    <MenuItem Header="Invert Case" CommandTarget="{Binding ActiveEditor.TextBox}"
                              Command="avalonedit:AvalonEditCommands.InvertCase" />
                    <Separator />
                    <MenuItem Header="Tabs to Spaces" CommandTarget="{Binding ActiveEditor.TextBox}"
                              Command="avalonedit:AvalonEditCommands.ConvertTabsToSpaces" />
                    <MenuItem Header="Spaces to Tabs" CommandTarget="{Binding ActiveEditor.TextBox}"
                              Command="avalonedit:AvalonEditCommands.ConvertSpacesToTabs" />
                    <MenuItem Header="Leading tabs to spaces" CommandTarget="{Binding ActiveEditor.TextBox}"
                              Command="avalonedit:AvalonEditCommands.ConvertLeadingTabsToSpaces" />
                    <MenuItem Header="Leading spaces to tabs" CommandTarget="{Binding ActiveEditor.TextBox}"
                              Command="avalonedit:AvalonEditCommands.ConvertLeadingSpacesToTabs" />
                    <MenuItem Header="Indent Selection" CommandTarget="{Binding ActiveEditor.TextBox}"
                              Command="avalonedit:AvalonEditCommands.IndentSelection" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Find in Files" Command="{Binding ShowFindReplaceCommand}" />
                <MenuItem Header="Replace in Files" Command="{Binding ShowFindReplaceCommand}" />
                <Separator />
                <MenuItem Header="Find and Replace">
                    <MenuItem Header="Find" Command="ApplicationCommands.Find"
                              CommandTarget="{Binding ActiveEditor.TextBox}" />
                    <MenuItem Header="Find Next" Command="avalonedit:SearchCommands.FindNext"
                              CommandTarget="{Binding ActiveEditor.TextBox}" />
                    <MenuItem Header="Find Previous" Command="avalonedit:SearchCommands.FindPrevious"
                              CommandTarget="{Binding ActiveEditor.TextBox}" />
                    <MenuItem Header="Cancel Search" Command="avalonedit:SearchCommands.CloseSearchPanel"
                              CommandTarget="{Binding ActiveEditor.TextBox}" />
                    <MenuItem Header="Find and Replace" />

                </MenuItem>

                <Separator />
                <MenuItem Header="Go To..." CommandTarget="{Binding ActiveEditor.TextBox}" />
                <MenuItem Header="Folding">
                    <MenuItem Header="_Open All Folds"
                              Command="{Binding ActiveEditor.TextBox.OpenAllFoldsCommand, Mode=OneWay}" />
                    <MenuItem Header="_Close All Folds"
                              Command="{Binding ActiveEditor.TextBox.CloseAllFoldsCommand, Mode=OneWay}" />
                    <MenuItem Header="Toggle Current Fold" Command="{Binding ActiveEditor.TextBox.ToggleFoldsCommand}" />
                    <MenuItem Header="Toggle All Folds" Command="{Binding  ActiveEditor.TextBox.ToggleAllFoldsCommand}" />

                </MenuItem>
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Appearance">
                    <MenuItem Header="Accents">
                        <MenuItem.Resources>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="Command" Value="{Binding ChangeAccentCommand}" />
                                <Setter Property="CommandParameter"
                                        Value="{Binding Header, RelativeSource={RelativeSource Self}}" />
                            </Style>
                        </MenuItem.Resources>
                        <MenuItem Header="Red" />
                        <MenuItem Header="Green" />
                        <MenuItem Header="Blue" />
                        <MenuItem Header="Orange" />
                        <MenuItem Header="Purple" />
                    </MenuItem>
                </MenuItem>

                <MenuItem Header="View Whitespace" IsCheckable="true"
                          IsChecked="{Binding ShowSpaces, BindsDirectlyToSource=True, Source={x:Static gui:EditorOptions.Instance}}" />
                <MenuItem Header="View EOL" IsCheckable="true"
                          IsChecked="{Binding ShowEndOfLine, Source={x:Static gui:EditorOptions.Instance}}" />
                <MenuItem Header="View Tabs" IsCheckable="true"
                          IsChecked="{Binding ShowTabs, Source={x:Static gui:EditorOptions.Instance}}" />
                <MenuItem Header="Wordwrap" IsCheckable="true"
                          IsChecked="{Binding WrapWords, Source={x:Static gui:EditorOptions.Instance}}" />
                <MenuItem Header="Line Numbers" IsCheckable="true"
                          IsChecked="{Binding ShowLineNumbers, BindsDirectlyToSource=True, Source={x:Static gui:EditorOptions.Instance}}">

                </MenuItem>
            </MenuItem>
            <MenuItem Header="View _as">
                <MenuItem Header="ABB" Command="{Binding ChangeViewAsCommand}" CommandParameter="ABB" />
                <MenuItem Header="KUKA" Command="{Binding ChangeViewAsCommand}" CommandParameter="KUKA" />
                <MenuItem Header="Fanuc" Command="{Binding ChangeViewAsCommand}" CommandParameter="Fanuc" />
                <MenuItem Header="Nachi" Command="{Binding ChangeViewAsCommand}" CommandParameter="Nachi" />
                <MenuItem Header="Kawasaki" Command="{Binding ChangeViewAsCommand}" CommandParameter="Kawasaki" />
            </MenuItem>

            <MenuItem Header="Tools">
                <MenuItem Header="Angle Converter" Command="{Binding AddToolCommand}"
                          CommandParameter="Angle Converter" />
            </MenuItem>
            <MenuItem Header="Window">
                <MenuItem Header="Windows">
                    <MenuItem Header="Functions" Command="{Binding AddToolCommand}" CommandParameter="Functions" />
                    <MenuItem Header="Object Browser" Command="{Binding AddToolCommand}"
                              CommandParameter="Object Browser" />
                    <MenuItem Header="Explorer" Command="{Binding AddToolCommand}" CommandParameter="Explorer" />
                    <MenuItem Header="Angle Converter" Command="{Binding AddToolCommand}"
                              CommandParameter="Angle Converter" />
                    <MenuItem Header="Notes" Command="{Binding AddToolCommand}" CommandParameter="Notes" />
                    <MenuItem Header="Output Window" Command="{Binding AddToolCommand}"
                              CommandParameter="Output Window" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Robot" ItemsSource="{Binding ActiveEditor.FileLanguage}">
                <MenuItem.ItemTemplateSelector>
                    <classes:MenuTemplateSelector>
                        <classes:MenuTemplateSelector.ABBTemplate>
                            <DataTemplate />
                        </classes:MenuTemplateSelector.ABBTemplate>
                    </classes:MenuTemplateSelector>
                </MenuItem.ItemTemplateSelector>
                <MenuItem Header="Archive Viewer" Command="{Binding AddToolCommand}" CommandParameter="ArchiveInfo" />
                <MenuItem Header="Shift Program" Command="{Binding AddToolCommand}" CommandParameter="Shift" />
                <MenuItem Header="KUKA">
                    <MenuItem Header="test">
                        <MenuItem.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding ActiveEditor.FileLanguage.MenuItems}" />
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <MenuItem Header="CleanDat" Command="{Binding AddToolCommand}" CommandParameter="CleanDat" />
                    <MenuItem Header="Rename Positions" Command="{Binding AddToolCommand}" />
                    <MenuItem Header="ReverseOrder" />
                    <MenuItem Header="Mirror" />
                    <MenuItem Header="Adjust Status/Turn" />
                    <MenuItem Header="Sort DataList" />
                    <MenuItem Header="View I/O List" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_View Help" />
                <MenuItem Header="Report a _Bug" />
                <MenuItem Header="_About" Command="{Binding ShowAboutCommand}" />
            </MenuItem>
        </Menu>
        <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Grid.Row="1">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Height" Value="34" />
                    <Setter Property="Width" Value="34" />
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="10" Color="Gray" Opacity="0.25" Direction="270" />
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.30" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                    <Setter Property="Height" Value="34" />
                    <Setter Property="Width" Value="34" />
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="IsThreeState" Value="False" />
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="10" Color="Black" Opacity="0.25" Direction="270" />
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="ToolTip" Value="Show Folds" />
                            <!-- Property="Content" Value="{StaticResource FoldingDisabled}"-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="ToolTip" Value="Hide Folds" />
                            <!-- Setter Property="Content" Value="{StaticResource FoldingEnabled}" -->
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Height" Value="24" />
                    <Setter Property="Width" Value="24" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type ButtonBase}}}"
                            Value="False">
                            <Setter Property="Opacity" Value="0.30" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>

            <Button Margin="5" Command="{Binding NewFileCommand}">
                <Image  />
            </Button>
            <Button Command="{Binding OpenFileCommand}">
                <Image />
            </Button>
            <Button Command="{Binding ActiveEditor.TextBox.SaveCommand,Mode=OneWay}">
                <Image  />
            </Button>
            <Button RenderTransformOrigin="0.5,0.5" Command="{Binding ActiveEditor.TextBox.UndoCommand,Mode=OneWay}">
                <Image  RenderTransformOrigin="0.5,0.5">
                    <Image.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-1" />
                            <SkewTransform />
                            <RotateTransform CenterX="-1" />
                            <TranslateTransform />
                        </TransformGroup>
                    </Image.RenderTransform>
                </Image>
            </Button>
            <Button Command="{Binding ActiveEditor.TextBox.RedoCommand, Mode=OneWay}">
                 />
            </Button>
            <Button Command="{Binding ActiveEditor.TextBox.CutCommand, Mode=OneWay}">
                />
            </Button>
            <Button Command="{Binding ActiveEditor.TextBox.CopyCommand, Mode=OneWay}"
                   />
            <Button Command="{Binding ActiveEditor.TextBox.PasteCommand, Mode=OneWay}"
                     />
            <ToggleButton IsChecked="{Binding EnableFolding, Source={x:Static gui:EditorOptions.Instance}}" />

            <Button ToolTip="Expand Folds" Command="{Binding ActiveEditor.TextBox.OpenAllFoldsCommand, Mode=OneWay}">
               
            </Button>
            <Button ToolTip="Collapse Folds" Command="{Binding ActiveEditor.TextBox.CloseAllFoldsCommand, Mode=OneWay}">
               
            </Button>
            <Button ToolTip="Decrease Indent" Command="{Binding ActiveEditor.TextBox.ChangeIndentCommand}"
                    CommandParameter="false">
               

            </Button>
            <Button ToolTip="Increase Indent" Command="{Binding ActiveEditor.TextBox.ChangeIndentCommand}"
                    CommandParameter="true">

            </Button>
        </StackPanel>
        <ad:DockingManager x:Name="DockManager"  Background="Transparent" Grid.Row="2">
            <ad:LayoutRoot>
                <ad:LayoutPanel Orientation="Vertical">
                    <ad:LayoutPanel Orientation="Horizontal">
                        <ad:LayoutAnchorablePaneGroup DockWidth="300">
                        <ad:LayoutAnchorablePane Name="LeftPane"/>
                    </ad:LayoutAnchorablePaneGroup>
                    <ad:LayoutDocumentPane/>
                    <ad:LayoutAnchorablePane Name="RightPane" DockWidth="250">
                            <ad:LayoutAnchorable x:Name="Functions">
                                <views:FunctionWindow/>
                            </ad:LayoutAnchorable>
                        </ad:LayoutAnchorablePane>
                    </ad:LayoutPanel>
                <ad:LayoutAnchorablePane Name="BottomPane"/>
                </ad:LayoutPanel>
            </ad:LayoutRoot>
        </ad:DockingManager>
        <StatusBar Grid.Row="3">
            <StatusBar.Resources>
                <Style TargetType="{x:Type StatusBarItem}">
                    <Setter Property="FontWeight" Value="Normal" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="FontWeight" Value="ExtraLight" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="FontWeight" Value="Normal" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="FontWeight" Value="ExtraLight" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

            </StatusBar.Resources>
                        <StatusBar.DataContext>
                <Binding Mode="OneWay" NotifyOnSourceUpdated="True" Path="StatusBar" Source="{StaticResource Locator}" />
            </StatusBar.DataContext>
            <StatusBarItem Grid.Column="2" DataContext="{Binding}" Content="{Binding ActiveEditor.TextBox.Line, StringFormat=Line \{0\}}" ContentStringFormat="{Binding ActiveEditor.TextBox.Line, StringFormat=Line \{0\}}" ToolTip="Current Line"/>
            <StatusBarItem  Grid.Column="3" DataContext="{Binding}" ToolTip="Column Position" Content="{Binding ActiveEditor.TextBox.Column, StringFormat=Col \{0\}}" ContentStringFormat="{Binding ActiveEditor.TextBox.Column, StringFormat=Col \{0\}}"  />
            <StatusBarItem Grid.Column="4" DataContext="{Binding}" ToolTip="Offset Position of Caret" Content="{Binding ActiveEditor.TextBox.Offset, StringFormat=Offset \{0\}}" ContentStringFormat="{Binding ActiveEditor.TextBox.Offset, StringFormat=Offset \{0\}}"  />
            <StatusBarItem Grid.Column="5" DataContext="{Binding}" ToolTip="Robot Type" Content="{Binding ActiveEditor.FileLanguage.Name}"  />
            <StatusBarItem Grid.Column="6" DataContext="{Binding}" ToolTip="Last Modified" Content="{Binding ActiveEditor.TextBox.FileSave}" />
            <StatusBarItem Grid.Column="7" Content="INS"  ToolTip="Insert Mode" IsEnabled="{Binding IsInsPressed}" />
            <StatusBarItem Grid.Column="8" Content="CAPS" ToolTip="Caps Lock"   IsEnabled="{Binding IsCapsPressed}" />
            <StatusBarItem Grid.Column="9" Content="SCR" ToolTip="Scroll Lock"  IsEnabled="{Binding IsScrollPressed}"  />
        </StatusBar>
    </Grid>
</mah:MetroWindow>
