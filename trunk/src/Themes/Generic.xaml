<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:gui="clr-namespace:miRobotEditor.GUI"
    xmlns:converters="clr-namespace:miRobotEditor.Converters"
    xmlns:classes="clr-namespace:miRobotEditor.Classes"
	xmlns:vm="clr-namespace:miRobotEditor.ViewModel"
    xmlns:local="clr-namespace:miRobotEditor.Controls"
    xmlns:validation="clr-namespace:miRobotEditor.ValidationRules"
    xmlns:rkc="clr-namespace:miRobotEditor.Common.ResourceAccess" xmlns:System="clr-namespace:System;assembly=mscorlib" >

    <gui:TextEditorOptions  x:Key="TextOptions"  AllowScrollBelowDocument="False" ConvertTabsToSpaces="True" EnableEmailHyperlinks="True" EnableRectangularSelection="True" EnableFolding="True" EnableHyperlinks="True" RequireControlModifierForHyperlinkClick="True" ShowTabs="True" ShowSpaces="True" ShowEndOfLine="True" />
    <rkc:ResourceKeyConverter x:Key="ResourceKeyConverter" />
    <converters:BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
    <converters:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
    <vm:GlobalOptionsViewModel x:Key="GlobalOptions"/>
    
    <ControlTemplate x:Key="validationTemplate">
        <DockPanel>
            <TextBlock  Foreground="Red" FontSize="20"><Run Text="!" />
            </TextBlock>
            <AdornedElementPlaceholder />
        </DockPanel>
    </ControlTemplate>
    
    <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"  Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <DataTemplate DataType="{x:Type vm:GotoViewModel}">
        <StackPanel Orientation="Vertical" >
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                    <Setter Property="Width" Value="75"/>
                    <Setter Property="Margin" Value="5,0"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </Style>               
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="TabIndex" Value="1"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="TextWrapping" Value="NoWrap"/>
                    <Setter Property="Height" Value="25"/>
                 </Style>
            </StackPanel.Resources>
            <TextBlock x:Name="Description"  HorizontalAlignment="Stretch" Margin="5" TextWrapping="Wrap" Text="{Binding Description}" VerticalAlignment="Top" Height="20"/>
            
            
            <TextBox  x:Name="EnteredText" Text="{Binding EnteredText, ValidatesOnDataErrors=True}"  Validation.ErrorTemplate="{StaticResource validationTemplate}"/>
            <StackPanel Orientation="Horizontal"  HorizontalAlignment="Right" Margin="5" >
                <Button x:Name="btnOK" Click="{Binding OkCommand}"  Content="_OK"/>
                <Button x:Name="btnCancel" Click="{Binding CancelCommand}" Content="_Cancel"  />
            </StackPanel>
        </StackPanel>
    </DataTemplate>
    
    <DataTemplate x:Key="DummyDocTemplate">
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <gui:Editor Grid.Row="{Binding DataRow}" BorderThickness="1"/>
            <local:ExtendedGridSplitter Grid.Row="{Binding GridRow}" HorizontalAlignment="Stretch" Height="20" CollapseMode="Previous"/>
            <gui:Editor  BorderThickness="1" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FunctionItemTemplate" DataType="{x:Type classes:Variable}">
        <TextBlock Text="{Binding Name}">
            <TextBlock.ToolTip>
                <GroupBox Header="{Binding Name}"	FontWeight="ExtraBold"	FontSize="14">
                    <GroupBox.Resources>
                        <Style	TargetType="{x:Type TextBlock}">
                            <Setter Property="FontWeight" Value="Normal" />
                        </Style>
                    </GroupBox.Resources>
                    <StackPanel	Orientation="Vertical">
                        <TextBlock Text="{Binding Offset, StringFormat=Offset:\=\{0\}}" Visibility="{Binding ShowOffset, Converter={StaticResource BoolToVisConverter}}" />
                        <TextBlock Text="{Binding Returns, StringFormat=Returns:\=\{0\}}" Visibility="{Binding ShowReturns, Converter={StaticResource BoolToVisConverter}}" />
                        <TextBlock Text="{Binding Declaration, StringFormat=Returns:\=\{0\}}" Visibility="{Binding ShowDeclaration, Converter={StaticResource BoolToVisConverter}}" />
                    </StackPanel>
                </GroupBox>
            </TextBlock.ToolTip>
        </TextBlock>
    </DataTemplate>
    
    <DataTemplate x:Key="MessageWindowTemplate">
        <ListView ItemsSource="{Binding Path=Messages}" SelectedItem="{Binding SelectedMessage}" Height="Auto" Width="Auto">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear" Command="{Binding ClearMessagesCommand}"/>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="16" DisplayMemberBinding="{Binding Icon}" />
                    <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Title}" />
                    <GridViewColumn Header="Message" DisplayMemberBinding="{Binding Description}" />
                </GridView>
            </ListView.View>
            <ListView.Resources>
                <Style TargetType="{x:Type ListViewItem }">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <DataTemplate>
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Image Source="{Binding Icon}" Grid.RowSpan="3"/>
                                    <TextBlock Grid.Column="1" Text="{Binding SelectedMessage.Title , StringFormat=Title     \{0\}}"/>
                                    <Separator Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2"/>
                                    <Separator />
                                    <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding SelectedMessage.Description , StringFormat=Description     \{0\}}"/>
                                </Grid>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>
        </ListView>
    </DataTemplate>

    <!-- Code Completion Items -->
    <Style TargetType="{x:Type ae:TextEditor}">
        <Setter Property="Options" Value="{StaticResource TextOptions}"/>
        <Setter Property="ShowLineNumbers" Value="{Binding ShowLineNumbers,Source={StaticResource TextOptions}}"/>
        
    </Style>
    
    
</ResourceDictionary>
