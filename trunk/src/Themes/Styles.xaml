<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalondock="http://avalondock.codeplex.com"
                    xmlns:Controls="clr-namespace:miRobotEditor.Controls">
 	    <Style x:Key="DataGridStyle"  TargetType="DataGrid">
        <Setter Property="RowBackground" Value="#FFFFFF" />
        <Setter Property="AlternatingRowBackground" Value="#EBEBED" />
        <Setter Property="RowHeight" Value="18" />
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalGridLinesBrush" Value="#A0A0A0" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="SelectionMode" Value="Single" />        
        <Setter Property="ItemsSource" Value="{Binding}" />
        <Setter Property="AlternatingRowBackground" Value="Gainsboro" />
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="IsTextSearchEnabled" Value="True"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CanUserReorderColumns" Value="True" />
         <Setter Property="CanUserResizeColumns" Value="True"/>
         <Setter Property="CanUserResizeRows" Value="False" />
         <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        
    </Style>
    
    <Style TargetType="Controls:DummyDoc">
        <Setter Property="Background" Value="{DynamicResource InactiveWindowBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InactiveWindowBrush}"/>
    </Style>

    <Style TargetType="ToolBar">
        <Setter Property="Background" Value="{DynamicResource InactiveWindowBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InactiveWindowBrush}"/>
    </Style>
    <Style TargetType="{x:Type ToolBarPanel}">
        <Setter Property="Background" Value="{DynamicResource InactiveWindowBrush}"/>        
    </Style>
    <Style TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{DynamicResource InactiveWindowBrush}"/>        
    </Style>



    <!--Menu-->
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource InactiveWindowBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InactiveWindowBrush}"/>
    </Style>

    <!--MenuItem-->
    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource InactiveWindowBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InactiveWindowBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value= "{DynamicResource MouseDownMenuBrush}"/>
                <Setter Property="BorderBrush" Value= "{DynamicResource MouseDownMenuBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MouseOverMenuBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MouseOverMenuBorderBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridColumnHeader" x:Key="DataGridHeaderGlassEffect" >
    	
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#EEEEEE"/>
        <Setter Property="Padding" Value="7,0,7,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SortStates" >
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unsorted" />
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SortIcon" Storyboard.TargetProperty="Opacity" Duration="0" To="1.0" />
                                        <DoubleAnimation Storyboard.TargetName="SortIconTransform" Storyboard.TargetProperty="ScaleY" Duration="0" To="-1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="shine" Storyboard.TargetProperty="Opacity">
                                        <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="dark" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.0000000" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="BackgroundRectangle" Stretch="Fill" Fill="{StaticResource ContentAreaBrushDark}" Grid.ColumnSpan="2" Grid.RowSpan="2"  />
                        <Border BorderBrush="Transparent" BorderThickness="1,1,1,1" Grid.ColumnSpan="3" Grid.RowSpan="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.5*"/>
                                    <RowDefinition Height="0.5*"/>
                                </Grid.RowDefinitions>
                                <!--dark-->
                                <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="dark" Width="Auto" Grid.ColumnSpan="3" Grid.RowSpan="3" Background="#66000000" Opacity="0"/>
                                <!--glow -->
                                <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" Grid.ColumnSpan="3">
                                    <Border.Background>
                                        <RadialGradientBrush>
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1.7" ScaleY="2.2"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform X="-0.3" Y="-0.1"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#B2FFFFFF" Offset="0"/>
                                            <GradientStop Color="#00FFFFFF" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Border.Background>
                                </Border>
                                <!--shine -->
                                <Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" Grid.ColumnSpan="3">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,0.9" StartPoint="0.5,0.1">
                                            <GradientStop Color="#99FFFFFF" Offset="0"/>
                                            <GradientStop Color="#33FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="HeaderText"   Grid.RowSpan="2"  Content="{TemplateBinding Content}" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
                        <Rectangle Name="VerticalSeparator" Grid.RowSpan="2" Grid.Column="2" Width="1" VerticalAlignment="Stretch" Fill="{TemplateBinding SeparatorBrush}" Visibility="{TemplateBinding SeparatorVisibility}" />
                        <Path Grid.RowSpan="2" Name="SortIcon" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="0" 
                            Grid.Column="1" Stretch="Uniform" Width="8" Data="F1 M -3,3 L 3,3 L 0,0 Z ">
                                <Path.Fill>
                                    <SolidColorBrush Color="#FFFFFFFF" />
                                </Path.Fill>
                                <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="SortIconTransform" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BitmapEffect">
                    <Setter.Value>
                        <OuterGlowBitmapEffect GlowColor="Purple" GlowSize="8"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BitmapEffect">
                    <Setter.Value>
                        <OuterGlowBitmapEffect GlowColor="Gold" GlowSize="8"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="DocumentHeaderTemplateKey" >
        <Grid>
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
            
        </Grid>
    </DataTemplate>

    <!--Main Docking Control-->
    <Style TargetType="avalondock:DockingManager">
        <Setter Property="Background" Value="{StaticResource InactiveWindowBrush}"/>   
        <Setter Property="DocumentHeaderTemplate" Value="{DynamicResource DocumentHeaderTemplateKey}"/>
    </Style>
    
    <Style TargetType="avalondock:AnchorablePaneTabPanel">
        <Setter Property="Background" Value="{StaticResource InactiveWindowBrush}"/>
    </Style>
    <Style TargetType="avalondock:AnchorablePaneTitle">
        <Setter Property="Background" Value="{StaticResource InactiveWindowBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value= "{DynamicResource AnchorableActiveBackgroundColor}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AnchorableMouseOverBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- AvalonDock Inactive area behind document tab -->
    <Style TargetType="avalondock:DocumentPaneTabPanel">
        <Setter Property="Background" Value="{StaticResource InactiveWindowBrush}"/>
    </Style>
    <Style TargetType="avalondock:LayoutDocumentControl">
        <Setter Property="Background" Value="#FF7381F9"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value= "Red"/>
                <Setter Property="Foreground" Value= "{DynamicResource ActiveDocumentForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DocumentMouseOverForegroundBrush}"/>
                <Setter Property="Background" Value="{DynamicResource DocumentMouseOverBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
  
    <Style TargetType="avalondock:LayoutDocumentTabItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource InactiveWindowBrush}"/>        
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value= "Red"/>
                <Setter Property="Foreground" Value= "{DynamicResource ActiveDocumentForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DocumentMouseOverForegroundBrush}"/>
                <Setter Property="Background" Value="{DynamicResource DocumentMouseOverBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>

    </Style>
    
    
    <!-- Background of AvalonDock Control. Doenst Need Mouse over-->
    <Style TargetType="avalondock:LayoutAnchorableControl">
        <Setter Property="Background" Value="{StaticResource InactiveWindowBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value= "{DynamicResource AnchorableActiveBackgroundColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="avalondock:LayoutAnchorableTabItem">
        <Setter Property="Background" Value="{StaticResource InactiveWindowBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource InactiveTabForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource InactiveWindowBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource ActiveTabBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource InactiveTabForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ActiveTabBackgroundBrush}"/>
            </Trigger>
            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FEFEFE"/>
                <Setter Property="Foreground" Value="#637ACC"/>
            </Trigger>
        </Style.Triggers>
    </Style> 
</ResourceDictionary>