<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:templates="clr-namespace:miRobotEditor.Templates"
                    xmlns:gui="clr-namespace:miRobotEditor.GUI"
                    xmlns:local="clr-namespace:miRobotEditor.Controls"
                    xmlns:vm="clr-namespace:miRobotEditor.ViewModel"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:classes="clr-namespace:miRobotEditor.Classes"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:miRobotEditor.Converters"
                    xmlns:miRobotEditor="clr-namespace:miRobotEditor"
                    xmlns:regularExpressions="clr-namespace:System.Text.RegularExpressions;assembly=System"
                    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
                    xmlns:editor="clr-namespace:miRobotEditor.GUI.Editor">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/miRobotEditor;component/Templates/Generic.xaml" />
        <ResourceDictionary Source="/miRobotEditor;component/Templates/ExtendedGridSplitter.xaml" />
        <ResourceDictionary Source="/miRobotEditor;component/Styles/Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <converters:BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
    <converters:VariableToFunctionConverter x:Key="VariableToFunctionConverter" />
    <converters:WidthConverter x:Key="WidthConverter" />

    <DataTemplate DataType="{x:Type vm:FindReplaceViewModel}">
        <DataTemplate.Resources>
            <CollectionViewSource Source="{Binding FindReplaceResults}" x:Key="items">
                <CollectionViewSource.SortDescriptions>
                    <componentModel:SortDescription PropertyName="File" />
                </CollectionViewSource.SortDescriptions>
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="File" />
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>
            <DataTemplate DataType="{x:Type regularExpressions:Group}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Index,StringFormat='Index = {0}'}" />
                    <TextBlock Text="{Binding Value,StringFormat='Value = {0}'}" />
                </StackPanel>
            </DataTemplate>
        </DataTemplate.Resources>
        <ListBox Name="items" ItemsSource="{Binding Source={StaticResource items}}" DisplayMemberPath="File">
            <ListBox.GroupStyle>
                <x:Static Member="GroupStyle.Default" />
            </ListBox.GroupStyle>
            <ListBox.Resources>

                <DataTemplate DataType="{x:Type miRobotEditor:FindReplaceResult}">
                    <Expander Header="{Binding File}">
                        <ListBox ItemsSource="{Binding Groups}" />
                    </Expander>
                </DataTemplate>
            </ListBox.Resources>

        </ListBox>
    </DataTemplate>

    <!-- Local Variables-->
    <DataTemplate DataType="{x:Type vm:LocalVariablesViewModel}">
        <templates:VisualVariableItem
            DataContext="{Binding Main.ActiveEditor, NotifyOnSourceUpdated=True, Source={Binding Locator}}"
            ItemsSource="{Binding TextBox.Variables}" />
    </DataTemplate>




    <DataTemplate DataType="{x:Type vm:OutputWindowMessage}">
        <Label>
            <StackPanel>
                <Image Source="{Binding Icon}" />
                <TextBlock Text="{Binding Title}" />
                <TextBlock Text="{Binding Description}" ToolTip="Hello" />
            </StackPanel>
        </Label>
    </DataTemplate>


 





    <!-- KUKA Document -->
    <DataTemplate DataType="{x:Type vm:KukaViewModel}">
        <DockPanel>
            <DockPanel.Resources>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Opacity" Value="0.1" />
                    <Setter Property="Height" Value="25" />
                    <Setter Property="FontSize" Value="10" />
                    <Setter Property="ItemTemplate" Value="{DynamicResource FunctionItemTemplate}" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Resources>
            <ComboBox SelectedItem="{Binding TextBox.SelectedVariable}"
                      ItemsSource="{Binding TextBox.Variables, ConverterParameter=Function, Converter={StaticResource VariableToFunctionConverter}}"
                      DockPanel.Dock="Top" />
            <Grid DockPanel.Dock="Top">
                <Grid.InputBindings>
                    <KeyBinding Command="{Binding ToggleGridCommand}" CommandTarget="{Binding Grid}" Key="T"
                                Modifiers="Control" />
                </Grid.InputBindings>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <ContentPresenter Content="{Binding Source}" Grid.Row="0" />
                <ContentPresenter Content="{Binding Data}" Grid.Row="2" />
                <local:ExtendedGridSplitter x:Name="_grid" Grid.Row="1" DataContext="{Binding Grid}" />
            </Grid>
        </DockPanel>
    </DataTemplate>

    <!-- Editor -->
    <DataTemplate DataType="{x:Type editor:Editor}">
        <DockPanel>
            <ComboBox Height="30" ItemsSource="{Binding Variables}" SelectedItem="{Binding SelectedVariable}"
                      DockPanel.Dock="Top" />
            <ContentPresenter Content="{Binding ''}" DockPanel.Dock="Top" />
        </DockPanel>
    </DataTemplate>


    <!-- Notes -->
    <DataTemplate x:Key="NotesWindowTemplate">
        <TextBox TextWrapping="Wrap" Background="DarkGray" BorderThickness="1" />
    </DataTemplate>


    <DataTemplate DataType="{x:Type vm:FunctionViewModel}">
        <ListView DataContext="{Binding Main.ActiveEditor, IsAsync=True, Source={StaticResource Locator}}"
                  Background="White" Foreground="Black" SelectedItem="{Binding TextBox.SelectedVariable}"
                  ItemsSource="{Binding TextBox.Variables, ConverterParameter=Function, Converter={StaticResource VariableToFunctionConverter}}"
                  ItemTemplate="{DynamicResource FunctionItemTemplate}" />
    </DataTemplate>


    <Style TargetType="{x:Type mah:Flyout}">
        <Style.Resources>
            <ResourceDictionary>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Foreground" Value="Black" />
                </Style>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="Foreground" Value="Black" />
                </Style>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Opacity" Value="0.35" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="IsOpen" Value="False" />
            </Trigger>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To=".95" Duration="0:0:0.5" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To=".25" Duration="0:0:0.5" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>