<avalonedit:TextEditor           
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:controls="clr-namespace:miRobotEditor.Controls"
             xmlns:ctt ="clr-namespace:miRobotEditor.Classes"
             xmlns:Editor="clr-namespace:miRobotEditor.GUI"
             x:Class="miRobotEditor.GUI.Editor" 	           
             mc:Ignorable="d" 
             d:DesignHeight="300"
             d:DesignWidth="300" 
             TextChanged="EditorTextChanged"
             IsVisibleChanged="RaiseUpdate"        
    		 FontSize="14"	        
             MouseHover="Mouse_OnHover"
             MouseHoverStopped="TextEditor_MouseHoverStopped"
            AllowDrop="True" 
            ShowLineNumbers="True"
            PreviewMouseWheel="EditorPreviewMouseWheel"
            GotFocus="TextEditorGotFocus"     
            >
    <avalonedit:TextEditor.Resources>
        <Style x:Key="{x:Type avalonedit:TextArea}" TargetType="{x:Type avalonedit:TextArea}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="avalonedit:TextArea.SelectionBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" Opacity="0.7" />
                </Setter.Value>
            </Setter>
            <Setter Property="avalonedit:TextArea.SelectionBorder">
                <Setter.Value>
                    <Pen Brush="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Thickness="1" />
                </Setter.Value>
            </Setter>
            <Setter Property="avalonedit:TextArea.SelectionForeground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type avalonedit:TextArea}">
                        <DockPanel Focusable="False">
                            <ItemsControl DockPanel.Dock="Left" Focusable="False" Margin="0,0,5,0" FontSize="10" FontFamily="Segoe UI" Padding="10,0,0,0" Background="#ADDEDEDE" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LeftMargins}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <ContentPresenter Panel.ZIndex="-1" Focusable="False" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextView}" />
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style  x:Key="FoldToolTipStyle" TargetType="{x:Type ToolTip}">            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolTip}" >                                   
                            <Border x:Name="myBorder" BorderBrush="Black" Padding="10" BorderThickness="1" Background="WhiteSmoke">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock x:Name="myText" Text="{Binding TextContent}" />
                                <Separator />
                                <TextBlock Text="{Binding Additional}"/>
                            </StackPanel>
                        </Border>                       
                    </ControlTemplate>                        
                </Setter.Value>
            </Setter>
        </Style>
        
    </avalonedit:TextEditor.Resources>
  
        <avalonedit:TextEditor.CommandBindings>
        <CommandBinding CanExecute="CanToggleComment" Executed="ExecuteToggleComment"/>
        <CommandBinding CanExecute="CanReplace" Executed="ReplaceExecuted"/>
        <CommandBinding CanExecute="CanSave" Executed="ExecuteSave"/>
        <CommandBinding CanExecute="CanSaveAs" Executed="ExecuteSaveAs"/>
        <CommandBinding CanExecute="CanGoto" Executed="ExecuteGoto"/>
        <CommandBinding CanExecute="CanToggleFolding" Executed="ExecuteToggleFolding"/>
        <CommandBinding CanExecute="CanToggleAllFolding" Executed="ExecuteToggleAllFolding"/>
        <CommandBinding CanExecute="CanOpenAllFolds" Executed="ExecuteOpenAllFolds"/>
        <CommandBinding CanExecute="CanCloseAllFolds" Executed="ExecuteCloseAllFolds"/>
        <CommandBinding CanExecute="CanIncreaseIndent" Executed="ExecuteIncreaseIndent"/>
        <CommandBinding CanExecute="CanDecreaseIndent" Executed="ExecuteDecreaseIndent"/>
        <CommandBinding CanExecute="CanShowDefinitions" Executed="ExecuteShowDefinitions"/>
    </avalonedit:TextEditor.CommandBindings>
    <avalonedit:TextEditor.InputBindings>
        <KeyBinding Command="{x:Static Editor:Editor.Goto}" Key="G" Modifiers="Control"/>
        <KeyBinding Command="Find" Key="F" Modifiers="Control"/>
        <KeyBinding Command="Replace" Key="R" Modifiers="Control"/>
    </avalonedit:TextEditor.InputBindings>
  <avalonedit:TextEditor.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Open all Folds"  Command="{x:Static Editor:Editor.OpenAllFolds}" InputGestureText="Ctrl+M,O" IsTextSearchCaseSensitive="True"/>
            <MenuItem Header="Close all Folds" Command="{x:Static Editor:Editor.CloseAllFolds}" InputGestureText="Ctrl+M,L"/>
        </ContextMenu>
    </avalonedit:TextEditor.ContextMenu>
    
</avalonedit:TextEditor>