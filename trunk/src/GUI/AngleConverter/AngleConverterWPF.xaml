<?xml version="1.0" encoding="utf-8"?>
<AvalonDock:LayoutAnchorable xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:AvalonDock="http://avalondock.codeplex.com"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"             
    xmlns:AngleConverter="clr-namespace:miRobotEditor.GUI.AngleConverter"
             x:Class="miRobotEditor.GUI.AngleConverter.AngleConverterWpf"
                             Title="Angle Converter" CanAutoHide="True"
                             AutoHideMinWidth="200" >
   
   
    <Grid HorizontalAlignment="Stretch">
        <Grid.Resources>
            <ColumnDefinition x:Key="ColumnWidth" Width="1*"/>
            <Style TargetType="{x:Type TextBox}" x:Key="DoubleStyle" BasedOn="{StaticResource {x:Type TextBox}}" >
                <Setter
				Property="HorizontalAlignment"
				Value="Stretch" />
                <Setter
				Property="TextAlignment"
				Value="Center" />


                <Setter
				Property="VerticalAlignment"
				Value="Stretch" />
                <Setter
				Property="Width"
				Value="Auto" />
            </Style>
            <Style TargetType="{x:Type ComboBox}" x:Key="ComboStyle" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="Grid.Column" Value="1"/>
                <Setter Property="Grid.ColumnSpan" Value="3"/>
                <Setter Property="Grid.Row" Value="1"/>
            </Style>

            <AngleConverter:EnumtoInt32 x:Key="EnumtoInt32" />
        </Grid.Resources>
        <Grid.DataContext>
            <AngleConverter:AngleConvertorViewModel/>
        </Grid.DataContext>
        <GroupBox
			HorizontalAlignment="Stretch"
			VerticalAlignment="Top">
            <Grid>
                <Grid.Resources>
                    <Style
						TargetType="{x:Type GroupBox}" BasedOn="{StaticResource {x:Type GroupBox}}">
                        <Setter
							Property="Height"
							Value="90" />
                        <Setter
							Property="Width"
							Value="200" />
                        <Setter
							Property="HorizontalAlignment"
							Value="Center" />
                        <Setter
							Property="VerticalAlignment"
							Value="Center" />
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition
						Height="35*" />
                    <RowDefinition
						Height="35*" />
                    <RowDefinition
						Height="30*" />
                </Grid.RowDefinitions>
                <GroupBox
					Grid.Row="0"
					Header="Input">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition
								Height="10*" />
                            <RowDefinition
								Height="55*" />
                            <RowDefinition
								Height="35*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition 
								Width="{Binding Width, Source={StaticResource ColumnWidth}}" />
                            <ColumnDefinition 
								Width="{Binding Width, Source={StaticResource ColumnWidth}}" />
                            <ColumnDefinition 
								Width="{Binding Width, Source={StaticResource ColumnWidth}}" />
                            <ColumnDefinition 
								Width="{Binding Width, Source={StaticResource ColumnWidth}}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
							HorizontalAlignment="Stretch"
							Grid.Row="1"
							Grid.Column="0"
							VerticalAlignment="Top"
							Text="Format" />
                        <ComboBox						
                            Style="{StaticResource ComboStyle}"
							ItemsSource="{Binding InputConvention}"	
                            DisplayMemberPath= "ValueCartesianString"
                            SelectedValuePath= "ValueCartesianEnum"
                            SelectedValue ="{Binding InputItem}"/>
                        <TextBox
							Style="{StaticResource DoubleStyle}"
                            Text="{Binding In1, StringFormat=\{0:F2\},  UpdateSourceTrigger=LostFocus}"
							Grid.Column="0"
							Grid.Row="2"
							TextAlignment="Center" />
                        <TextBox
							Style="{StaticResource DoubleStyle}"
						    Text="{Binding In2, StringFormat=\{0:F2\}, UpdateSourceTrigger=LostFocus}"
							Grid.Column="1"
							Grid.Row="2" />
                        <TextBox
							Style="{StaticResource DoubleStyle}"
							Text="{Binding In3, StringFormat=\{0:F2\},  UpdateSourceTrigger=LostFocus}"
							Grid.Column="2"
							Grid.Row="2" />
                        <TextBox
							x:Name="tbIn4"
							Style="{StaticResource DoubleStyle}"
							Text="{Binding In4, StringFormat=\{0:F2\},  UpdateSourceTrigger=LostFocus}"
							Grid.Column="3"
							Grid.Row="2"
							Visibility="{Binding In4Visible}" />
                    </Grid>
                </GroupBox>
                <GroupBox
					x:Name="groupBox"
					Grid.Row="1"
					Header="Output">
                    <Grid
						x:Name="OutGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition
								Height="10*" />
                            <RowDefinition
								Height="55*" />
                            <RowDefinition
								Height="35*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition 
								Width="{Binding Width, Source={StaticResource ColumnWidth}}" />
                            <ColumnDefinition 
								Width="{Binding Width, Source={StaticResource ColumnWidth}}" />
                            <ColumnDefinition 
								Width="{Binding Width, Source={StaticResource ColumnWidth}}" />
                            <ColumnDefinition
								Width="{Binding Mode=OneWay, Source={StaticResource ColumnWidth}}" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
							HorizontalAlignment="Center"
							Grid.Row="1"
							Grid.Column="0"
							VerticalAlignment="Top"
							Text="Format" />
                        <ComboBox 
                            Style="{StaticResource ComboStyle}" 
                            ItemsSource="{Binding OutputConvention}"	
                            DisplayMemberPath= "ValueCartesianString"
                            SelectedValuePath= "ValueCartesianEnum"                           
                            SelectedValue="{Binding OutputItem}"/>
                        <TextBox
							Style="{StaticResource DoubleStyle}"
							Text="{Binding Out1, Mode=TwoWay, StringFormat=\{0:F2\}, UpdateSourceTrigger=PropertyChanged}"
							Grid.Row="2"
							Grid.Column="0"
							IsReadOnly="True" />
                        <TextBox
							Style="{StaticResource DoubleStyle}"
							Text="{Binding Out2, Mode=TwoWay, StringFormat=\{0:F2\}, UpdateSourceTrigger=PropertyChanged}"
							Grid.Row="2"
							Grid.Column="1"
							IsReadOnly="True" />
                        <TextBox
							Style="{StaticResource DoubleStyle}"
							Text="{Binding Out3, Mode=TwoWay, StringFormat=\{0:F2\}, UpdateSourceTrigger=PropertyChanged}"
							Grid.Row="2"
							Grid.Column="2"
							IsReadOnly="True" />
                        <TextBox
							
							Style="{StaticResource DoubleStyle}"
							Text="{Binding Out4, Mode=TwoWay, StringFormat=\{0:F2\}, UpdateSourceTrigger=PropertyChanged}"
							Grid.Row="2"
							Grid.Column="3"
							IsReadOnly="True"
							Visibility="{Binding Out4Visible}" />
                    </Grid>
                </GroupBox>
                <TextBox
					x:Name="txtMatrix"
					IsReadOnly="True"
					TextAlignment="Center"
					Text="{Binding Matrix}"
					Grid.Row="2"
					VerticalAlignment="Center"
					Height="79"
					Grid.ColumnSpan="4"
					SpellCheck.IsEnabled="False" />
            </Grid>
        </GroupBox>
    </Grid>
</AvalonDock:LayoutAnchorable>