<?xml version="1.0" encoding="utf-8"?>
<Window xmlns:explorer="clr-namespace:miRobotEditor.GUI.ExplorerControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:Classes="clr-namespace:miRobotEditor.Classes" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ad="http://avalondock.codeplex.com" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit" xmlns:ctrl="clr-namespace:miRobotEditor.Controls" xmlns:AngleConverter="clr-namespace:miRobotEditor.GUI.AngleConverter" xmlns:GUI="clr-namespace:miRobotEditor.GUI"
        xmlns:Notes="clr-namespace:miRobotEditor.GUI.Notes" xmlns:miRobotEditor="clr-namespace:miRobotEditor" xmlns:angle="clr-namespace:miRobotEditor.GUI.AngleConverter"
        xmlns:Behaviour="clr-namespace:miRobotEditor.Behaviour"
        mc:Ignorable="d"
	x:Class="miRobotEditor.MainWindow"
	WindowState="Maximized"
	Closing="WindowClosing"
	Title="miRobotEditor"
        Behaviour:DialogCloser.DialogResult="{Binding DialogCloseResult}"    
	Loaded="WindowLoaded"
	AllowDrop="True"
	Background="{Binding}"
	Icon="Properties/Resources/Editor.ico"
	Drop="DropFiles"
	DragEnter="onDragEnter"
	PreviewKeyUp="ManageKeys">
	<Window.Resources>
	    <RoutedCommand x:Key="ImportCommand" />
		<RoutedCommand x:Key="CloseCommand" />
		<Classes:StatusBar x:Key="StaticStatus" />
	</Window.Resources>
	<Window.CommandBindings>
		<CommandBinding
			Command="{StaticResource ImportCommand}"
			CanExecute="CanImport"
			Executed="ImportRobot" />
		<CommandBinding 
			Command="{StaticResource CloseCommand}"/>
	</Window.CommandBindings>
	<Window.InputBindings>
		<!--	<KeyBinding
			Command="ad:DockablePaneCommands.ToggleAutoHide"
			Gesture="F8"
			CommandTarget="{Binding ElementName=Functions, Mode=Default}" />
-->
		<KeyBinding
			Key="F3"
			Modifiers="Shift"
			Command="Search"
			CommandParameter="something" />
		<KeyBinding
			Key="R"
			Modifiers="Control"
			Gesture="CTRL+R"
			Command="Replace" />
		<KeyBinding
			Key="F"
			Modifiers="Control"
			Gesture="CTRL+F"
			Command="Find" />
	</Window.InputBindings>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition
				Height="48" />
			<RowDefinition
				Height="*" />
			<RowDefinition
				Height="*" />
			<RowDefinition
				Height="20" />
		</Grid.RowDefinitions>     
		<StackPanel
			Orientation="Vertical"
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch">
             <Menu IsMainMenu="True">                    
                    <MenuItem  Header="_File">
                        <MenuItem Header="_New" Command="{Binding AddNewFileCommand}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/newfile.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Open" Command="miRobotEditor:MainWindow.OpenFileCommand">
                            <MenuItem.Icon>
                                <Image Source="/Resources\folder_open.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Save" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Save">
                            <MenuItem.Icon>
                                <Image Source="/Resources\Save.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem	Header="Save _As" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.SaveAs">
                            <MenuItem.Icon>
                            <Image Source="/Resources\save_all.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem	Header="Reload" CommandTarget="{Binding ElementName=_activeEditor}" Command="{Binding GUI:DummyDoc.Reload}" />
                        <Separator />
                        <MenuItem Header="_Import" Command="{DynamicResource ImportCommand}" />
                        <MenuItem Header="Print" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Print">
                            <MenuItem.Icon>
                                <Image Source="/Resources\Print.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Print P_review" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.PrintPreview">
                            <MenuItem.Icon>
                                <Image Source="/Resources\print_preview.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Close" Command="miRobotEditor:MainWindow.CloseWindowCommand">
                            <MenuItem.Icon>
                                <Image Source="/Resources\close.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Classes:RecentFileList   />
                        <MenuItem Header="E_xit"  Command="miRobotEditor:MainWindow.ExitCommand">
                            <MenuItem.Icon>
                                <Image Source="/Resources\exit.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="_Edit">
                        <MenuItem Header="Undo" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Undo">
                            <MenuItem.Icon>
                                <Image Source="/Resources\Redo.png" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <ScaleTransform ScaleX="-1" />
                                    </Image.RenderTransform>
                                </Image>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Redo" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Redo">
                            <MenuItem.Icon>
                                <Image Source="/Resources\Redo.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Cut" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Cut">
                            <MenuItem.Icon>
                                <Image Source="/Resources\Cut.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Copy" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Copy">
                            <MenuItem.Icon>
                                <Image Source="/Resources\Copy.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Paste" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Paste">
                            <MenuItem.Icon>
                                <Image Source="/Resources\Paste.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Delete" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Delete" ToolTip="Deletes the current line." />
                        <MenuItem Header="Delete _Line" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.DeleteLine" ToolTip="Deletes the current line." />
                        <MenuItem Header="Select _All" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.SelectAll" ToolTip="Select All of Document.">
                            <MenuItem.Icon>
                                <Image Source="/Resources\select_all.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Comment Selection" CommandTarget="{Binding ElementName=_activeEditor.TextBox}">
                            <MenuItem.Icon>
                                <Image Source="/Resources\comment.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Formatting" x:Name="Formatting">
                            <MenuItem Header="View Whitespace" IsCheckable="True" IsChecked="{Binding ShowSpaces, Source={StaticResource TextOptions}}" />
                            <MenuItem Header="Wordwrap" IsChecked="{Binding WordWrap, ElementName=_activeEditor.TextBox}" />
                            <Separator />
                            <MenuItem Header="Toggle Comment" />
                            <Separator />
                            <MenuItem Header="Increase Line Indent" />
                            <MenuItem Header="Decrease Line Indent" />
                            <MenuItem Header="Remove Leading Whitespace" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.RemoveLeadingWhitespace" />
                            <MenuItem Header="Remove Trailing Whitespace" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.RemoveTrailingWhitespace" />
                            <MenuItem Header="To Uppercase" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.ConvertToUppercase" />
                            <MenuItem Header="To Lowercase" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.ConvertToLowercase" />
                            <MenuItem Header="Capitalize" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.ConvertToTitleCase" />
                            <MenuItem Header="Invert Case" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.InvertCase" />
                            <Separator />
                            <MenuItem Header="Tabs to Spaces" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.ConvertTabsToSpaces" />
                            <MenuItem Header="Spaces to Tabs" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.ConvertSpacesToTabs" />
                            <MenuItem Header="Leading tabs to spaces" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.ConvertLeadingTabsToSpaces" />
                            <MenuItem Header="Leading spaces to tabs" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.ConvertLeadingSpacesToTabs" />
                            <MenuItem Header="Indent Selection" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ae:AvalonEditCommands.IndentSelection" />
                        </MenuItem>
                        <MenuItem Header="Find and Replace" >
                            <MenuItem.Icon>
                                <Image Source="/Resources\Find.png"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Header="Find" Command="ApplicationCommands.Find" CommandTarget="{Binding ElementName=_activeEditor.TextBox}">
                            <MenuItem.Icon>
                                <Image Source="/Resources\Find.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Find Next" Command="ae:SearchCommands.FindNext" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" />
                    <MenuItem Header="Find Previous" Command="ae:SearchCommands.FindPrevious" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" />
                    <MenuItem Header="Cancel Search" Command="ae:SearchCommands.CloseSearchPanel" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" />

                        <Separator />
                        <MenuItem Header="Go To..." CommandTarget="{Binding ElementName=_activeEditor.TextBox}" />
                        <MenuItem Header="Folding">
                            <MenuItem Header="_Open All Folds" Command="{Binding OpenAllFolds}" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" />
                            <MenuItem Header="_Close All Folds" Command="{Binding CloseAllFolds}" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" />
                            <MenuItem Header="Toggle Current Fold" Command="{Binding ToggleFolding}" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" />
                            <MenuItem Header="Toggle All Folds" Command="{Binding  ToggleAllFolding}" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" />
                            <MenuItem Header="Show Definitions Only" Command="{Binding ShowDefinitions}" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" />
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="View">
                        <MenuItem Header="Environment">
                            <ComboBox >
                                <ComboBoxItem></ComboBoxItem>
                                <ComboBoxItem>KUKA KRC2</ComboBoxItem>
                                <ComboBoxItem>KUKA KRC4</ComboBoxItem>
                                <ComboBoxItem>ABB</ComboBoxItem>
                                <ComboBoxItem>Kawasaki</ComboBoxItem>
                                <ComboBoxItem>Nachi</ComboBoxItem>
                            </ComboBox>
                        </MenuItem>
                        <MenuItem Header="View Whitespace" IsCheckable="true" IsChecked="{Binding ShowSpaces, BindsDirectlyToSource=True,  Source={StaticResource TextOptions}}" />
                        <MenuItem Header="View EOL" IsCheckable="true" IsChecked="{Binding ShowEndOfLine, Source={StaticResource TextOptions}}">
                            <MenuItem.Icon>
                                <Image Source="/Resources\eol.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="View Tabs" IsCheckable="true" IsChecked="{Binding ShowTabs, Source={StaticResource TextOptions}}" />
                        <MenuItem Header="Wordwrap" Command="{Binding WordWrap, ElementName=_activeEditor.TextBox}" IsChecked="{Binding WordWrap, ElementName=_activeEditor.TextBox}" />
                        <MenuItem Header="Line Numbers" IsChecked="{Binding ShowLineNumbers, ElementName=_activeEditor.TextBox}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/line_numbers.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Windows">
                            <!--			<MenuItem
							Header="Toggle Functions"
							Command="ad:DockableContentCommands.ToggleAutoHide"
							CommandTarget="{Binding ElementName= Functions}" />
				-->
                        </MenuItem>
                        <MenuItem Header="View _as">
                            <MenuItem Header="ABB" Command="miRobotEditor:MainWindow.ChangeViewAsCommand" CommandParameter="ABB" />
                            <MenuItem Header="KUKA" Command="miRobotEditor:MainWindow.ChangeViewAsCommand" CommandParameter="KUKA" />
                            <MenuItem Header="Fanuc" Command="miRobotEditor:MainWindow.ChangeViewAsCommand" CommandParameter="Fanuc"/>
                            <MenuItem Header="Nachi" Command="miRobotEditor:MainWindow.ChangeViewAsCommand" CommandParameter="Nachi" />
                            <MenuItem Header="Kawasaki" Command="miRobotEditor:MainWindow.ChangeViewAsCommand" CommandParameter="Kawasaki" />
                        </MenuItem>
                    </MenuItem>
                    <MenuItem  Header="Tools">
                        <MenuItem Header="Angle Converter" Command="miRobotEditor:MainWindow.AddToolCommand"  CommandParameter="Angle Converter"/>
                        <MenuItem Header="Options" Command="miRobotEditor:MainWindow.ShowOptionsCommand" />
                    </MenuItem>
                    <MenuItem Header="Window">
                        <MenuItem Header="Windows">
                            <MenuItem Header="Functions"  Command="miRobotEditor:MainWindow.AddToolCommand" CommandParameter="Functions"/>
                            <MenuItem Header="Object Browser"  Command="miRobotEditor:MainWindow.AddToolCommand"  CommandParameter="Object Browser" />
                            <MenuItem Header="Explorer"  Command="miRobotEditor:MainWindow.AddToolCommand"  CommandParameter="Explorer" />
                            <MenuItem Header="Angle Converter"  Command="miRobotEditor:MainWindow.AddToolCommand"  CommandParameter="Angle Converter" />
                            <MenuItem Header="Notes"  Command="miRobotEditor:MainWindow.AddToolCommand"  CommandParameter="Notes" />
                            <MenuItem Header="Output Window"  Command="miRobotEditor:MainWindow.AddToolCommand"  CommandParameter="Output Window" />
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Robot" >
                        <MenuItem Header="Shift Program" Command="miRobotEditor:MainWindow.AddToolCommand" CommandParameter="Shift"/>
                        <MenuItem Header="KUKA">
                            <MenuItem Header="CleanDat"  Command="miRobotEditor:MainWindow.AddToolCommand"  CommandParameter="CleanDat"/>
                            <MenuItem Header="Rename Positions"  Command="miRobotEditor:MainWindow.AddToolCommand" />
                            <MenuItem Header="ReverseOrder"/>
                            <MenuItem Header="Mirror"/>
                            <MenuItem Header="Adjust Status/Turn"/>
                            <MenuItem Header="Sort DataList"/>
                            <MenuItem Header="View I/O List"/>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="_Help">
                        <MenuItem Header="_View Help" />
                        <MenuItem Header="Report a _Bug" />
                        <MenuItem Header="_About" Command="miRobotEditor:MainWindow.ShowAboutCommand"/>
                    </MenuItem>
                </Menu>
            <ToolBarPanel Grid.Row="1" >
                <ToolBarTray >
                    <ToolBarTray.Resources>                        
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Height" Value="16" />
                            <Setter Property="Width" Value="16" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type ButtonBase}}}" Value="False">
                                    <Setter Property="Opacity" Value="0.30" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToolBarTray.Resources>
                    <ToolBar Band="1" BandIndex="1" >
                        <Button Command="miRobotEditor:MainWindow.AddNewFileCommand">
                            <Image Source="/Resources\newfile.png" />
                        </Button>
                        <Button Command="miRobotEditor:MainWindow.OpenFileCommand">
                            <Image Source="/Resources\folder_open.png" />
                        </Button>
                        <Button CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Save">
                            <Image Source="/Resources\Save.png" />
                        </Button>
                    </ToolBar>
                    <ToolBar Band="1" BandIndex="2" >
                        <Button RenderTransformOrigin="0.5,0.5" CommandTarget="{Binding ElementName=_activeEditor.TextBox}"
							Command="ApplicationCommands.Undo">
                            <Button.RenderTransform>
                                <ScaleTransform ScaleX="-1" />
                            </Button.RenderTransform>                            
                            <Image Source="/Resources\Redo.png" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <ScaleTransform ScaleX="-1" />
                                </Image.RenderTransform>
                            </Image>
                        </Button>
                        <Button CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Redo">
                            <Image Source="/Resources\Redo.png" />
                        </Button>
                        <Button CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Cut">
                            <Image Source="/Resources\Cut.png" />
                        </Button>
                        <Button CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Copy">
                            <Image Source="/Resources\Copy.png" />
                        </Button>
                        <Button CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="ApplicationCommands.Paste">
                            <Image Source="/Resources\Paste.png" />
                        </Button>
                    </ToolBar>
                    <ToolBar Band="1" BandIndex="3"  ToolTip="Formatting Options" >
                        <ToggleButton ToolTip="Show Folds" IsChecked="{Binding EnableFolding, Source={StaticResource TextOptions}}" >
                            <Image Source="/Resources\togglefolding.png" />
                        </ToggleButton>
                        <Button ToolTip="Expand Folds" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="{Binding OpenAllFolds}">
                            <Image Source="/Resources\expandfolds.png" />
                        </Button>
                        <Button ToolTip="Collapse Folds" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="{Binding CloseAllFolds}">
                            <Image Source="/Resources\collapsefolds.png" />
                        </Button>
                        <Button Background="White" ToolTip="Decrease Indent" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="{Binding DecreaseIndent}">
                            <Image Source="/Resources\decreaseindent.png" />
                        </Button>
                        <Button Background="White" ToolTip="Increase Indent" CommandTarget="{Binding ElementName=_activeEditor.TextBox}" Command="{Binding IncreaseIndent}">
                            <Image Source="/Resources\increaseindent.png" />
                        </Button>
                    </ToolBar>
                </ToolBarTray>
            </ToolBarPanel>
        </StackPanel>
		<ad:DockingManager
			AllowMixedOrientation="True"
			x:Name="dockManager"
			DocumentClosing="OnDocumentClosing"
			Grid.Row="1"
			ActiveContentChanged="OnActiveContentChanged"
			Grid.RowSpan="2">
            <ad:DockingManager.DocumentHeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </ad:DockingManager.DocumentHeaderTemplate>
            <ad:DockingManager.Theme>     
                <ad:ExpressionLightTheme/>
            </ad:DockingManager.Theme>
			<ad:LayoutRoot>                
				<ad:LayoutPanel Orientation="Vertical">
					<ad:LayoutPanel Orientation="Horizontal">
						<ad:LayoutAnchorablePaneGroup DockWidth="300">
						    <ad:LayoutAnchorablePane>
									<explorer:FileExplorerWindow Title="Explorer" CanAutoHide="True" CanClose="True" x:Name="_explorer"/>
							</ad:LayoutAnchorablePane>
						</ad:LayoutAnchorablePaneGroup>
						<ad:LayoutDocumentPaneGroup>
							<ad:LayoutDocumentPane>
                                <ad:LayoutDocument
									Title="InitDoc" >
                                    <ad:LayoutDocument.IconSource>
                                        <BitmapImage  UriSource="/miRobotEditor;component/Resources/vxmethod_icon.png"/>
                                    </ad:LayoutDocument.IconSource>
									<GUI:DummyDoc Width="Auto" Height="Auto" TextUpdated="UpdateFunctions" />
								</ad:LayoutDocument>
							</ad:LayoutDocumentPane>
						</ad:LayoutDocumentPaneGroup>
						<ad:LayoutAnchorablePaneGroup DockWidth="250">
							<ad:LayoutAnchorablePane>
                                <GUI:FunctionWindow /> 
                                <angle:AngleConverterWpf/>
                                
							</ad:LayoutAnchorablePane>
						</ad:LayoutAnchorablePaneGroup>
					</ad:LayoutPanel>
					<ad:LayoutAnchorablePaneGroup DockHeight="200">
						<ad:LayoutAnchorablePane>
							<ad:LayoutAnchorable
								Title="Output Window"
								CanAutoHide="True"
								x:Name="OutputHandler"
								IconSource="Resources\error.png">
								<GUI:MessageWindow
									x:Name="Output"
									Width="Auto"
									Height="Auto" />
							</ad:LayoutAnchorable>
							
                            <Notes:NotesWindowTemplate/>
							<ad:LayoutAnchorable
								Title="Object Browser"
								x:Name="tabObjectBrowser"
								CanAutoHide="True"
								CanClose="False"
								IconSource="Resources\objectbrowser.png"
								IsVisible="False"
								CanHide="True">
								<GUI:ObjectBrowserWindow
									x:Name="objectBrowser"
									Width="Auto"
									Height="Auto" />
							</ad:LayoutAnchorable>
                            <ad:LayoutAnchorable
								Title="Locals"
								CanAutoHide="True"
								CanClose="False"
								IsVisible="False"
								CanHide="True">
                                <GUI:LocalVariableWindow Width="Auto" Height="Auto" />
                            </ad:LayoutAnchorable>
                        </ad:LayoutAnchorablePane>
					</ad:LayoutAnchorablePaneGroup>
				</ad:LayoutPanel>
			</ad:LayoutRoot>
		</ad:DockingManager>
        <StatusBar 
            Grid.Row="3"
			AllowDrop="False"
           SnapsToDevicePixels="True"
			Padding="0,0,0,0">
            <StatusBar.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="FontWeight" Value="ExtraBold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StatusBar.Resources>

            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="40" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="2">
                <TextBlock ToolTip="CurrentLine" Text="{Binding Instance.Line, BindsDirectlyToSource=True, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Source={StaticResource StaticStatus}}" />
            </StatusBarItem>
            <StatusBarItem
				Grid.Column="3">
                <TextBlock
					ToolTip="Column Position"
					Text="{Binding Instance.Column, BindsDirectlyToSource=True, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Source={StaticResource StaticStatus}}" />
            </StatusBarItem>
            <StatusBarItem
				Grid.Column="4">
                <TextBlock
					ToolTip="Offset Position of Caret"
					Text="{Binding Instance.Offset, BindsDirectlyToSource=True, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Source={StaticResource StaticStatus}}"
					TextAlignment="Center" />
            </StatusBarItem>
            <StatusBarItem
				Grid.Column="5">
                <TextBlock
					ToolTip="Robot Type"
					Text="{Binding Instance.Robot, BindsDirectlyToSource=True, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Source={StaticResource StaticStatus}}" />
            </StatusBarItem>
            <StatusBarItem
				Grid.Column="6">
                <TextBlock
					ToolTip="Last Modified"
					Text="{Binding Instance.FileSave, BindsDirectlyToSource=True, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Source={StaticResource StaticStatus}}" />
            </StatusBarItem>
            <StatusBarItem
				Grid.Column="7">
                <TextBlock
					Text="INS"
					IsEnabled="{Binding IsInsPressed}"
					TextAlignment="Center" />
            </StatusBarItem>
            <StatusBarItem
				Grid.Column="8">
                <TextBlock
					Text="CAPS"					
					ToolTip="Caps Lock"
					IsEnabled="{Binding IsCapsPressed}"
					TextAlignment="Center" />
            </StatusBarItem>
            <StatusBarItem
				Grid.Column="9">
                <TextBlock
					Text="SCR"
					ToolTip="Scroll Lock"
					IsEnabled="{Binding IsScrollPressed}"
					TextAlignment="Center" />
            </StatusBarItem>
            <StatusBarItem
				Grid.Column="10">
                <TextBlock
					Text="NUM"
					ToolTip="Number Lock"
					IsEnabled="{Binding IsNumPressed, BindsDirectlyToSource=True}"
					TextAlignment="Center" />
            </StatusBarItem>

        </StatusBar>
    </Grid>
</Window>