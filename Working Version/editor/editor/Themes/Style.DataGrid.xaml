<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">

        <Setter Property="RowHeight" Value="18" />
        <Setter Property="GridLinesVisibility" Value="All" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
    </Style>


    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">

        <Setter Property="Padding" Value="5,0,5,0" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <!-- Value="{Binding Path=Main.AccentBrush.Name, Source={Binding Layout}}"-->
    </Style>
    
    <Style x:Key="CellEditStyle" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="TextBoxInError" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="FrameworkElement.ToolTip"
                        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>


	<DataTemplate x:Key="MessageTooltipTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition />
				<RowDefinition />
				<RowDefinition />
			</Grid.RowDefinitions>
			<Image Grid.RowSpan="3" Source="{Binding Icon}" />
			<TextBlock Grid.Column="1"
                                               Text="{Binding SelectedMessage.Title, StringFormat=Title     {0}}" />
			<Separator Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" />
			<Separator />
			<TextBlock Grid.Column="1" Grid.Row="2"
                                               Text="{Binding SelectedMessage.Description, StringFormat=Description     {0}}" />
		</Grid>
	</DataTemplate>

	<Style x:Key="MessageViewItem" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
		<Setter Property="ToolTip">
			<Setter.Value>
				<DataTemplate>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition />
							<RowDefinition />
						</Grid.RowDefinitions>
						<Image Grid.RowSpan="3" Source="{Binding Icon}" />
						<TextBlock Grid.Column="1"
                                               Text="{Binding SelectedMessage.Title, StringFormat=Title     {0}}" />
						<Separator Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" />
						<Separator />
						<TextBlock Grid.Column="1" Grid.Row="2"
                                               Text="{Binding SelectedMessage.Description, StringFormat=Description     {0}}" />
					</Grid>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MessageViewStyle" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource DataGridStyle}">
		<Setter Property="Height" Value="Auto"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="IsReadOnly" Value="True"/>

	</Style>
</ResourceDictionary>