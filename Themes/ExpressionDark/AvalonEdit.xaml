<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
	  xmlns:AvalonEdit="clr-namespace:ICSharpCode.AvalonEdit;assembly=ICSharpCode.AvalonEdit"

    xmlns:editing="clr-namespace:ICSharpCode.AvalonEdit.Editing;assembly=ICSharpCode.AvalonEdit"
    xmlns:AEComplete="clr-namespace:ICSharpCode.AvalonEdit.CodeCompletion;assembly=ICSharpCode.AvalonEdit"
    xmlns:hyperl="clr-namespace:SimpleControls.Hyperlink;assembly=SimpleControls"
    >
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/Themes;component/ExpressionDark/Brushes.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <Style TargetType="{x:Type AvalonEdit:TextEditor}">
    <Setter Property="Foreground" Value="White" />
    <Setter Property="Background" Value="Black" />
    <Setter Property="LineNumbersForeground" Value="#ff929292" />
    <Setter Property="FlowDirection" Value="LeftToRight"/><!-- AvalonEdit does not support RTL, so ensure we use LTR by default -->
    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type AvalonEdit:TextEditor}">
          <ScrollViewer Focusable="False"
						            Name="PART_ScrollViewer"
						            CanContentScroll="True"
						            VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
						            HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
						            Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextArea}"
						            VerticalContentAlignment="Top"
						            HorizontalContentAlignment="Left"
						            Background="{TemplateBinding Background}"
						            Padding="{TemplateBinding Padding}"
						            BorderBrush="{TemplateBinding BorderBrush}"
					              BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer.Template>
              <ControlTemplate TargetType="{x:Type ScrollViewer}">
                <Border BorderBrush="{TemplateBinding BorderBrush}"
					              BorderThickness="{TemplateBinding BorderThickness}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                  <Grid Background="{TemplateBinding Background}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Display TextEditor content in upper left corner -->
                    <ScrollContentPresenter Grid.Column="0" Grid.Row="0"
                                            KeyboardNavigation.DirectionalNavigation="Local"
                                            CanContentScroll="True"
                                            CanHorizontallyScroll="True"
                                            CanVerticallyScroll="True"
                                            />

                    <!-- Display Vertical Scrollbar to the right -->
                    <ScrollBar Name="PART_VerticalScrollBar"
                               Grid.Column="1"
                               Value="{TemplateBinding VerticalOffset}"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                    <!-- Display mini-toolbar and Horizontal scrollbar at the bottom of the view -->
                    <Grid Grid.Column="0" Grid.Row="1" Background="{TemplateBinding Background}">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>

                      <ComboBox Grid.Column="0" MinWidth="50" Margin="3" Padding="3" FontSize="10"
                                ItemsSource="{Binding Path=FontSize.ScaleList}" SelectedValuePath="Value" DisplayMemberPath="Key"
                                SelectedValue="{Binding Path=FontSize.SelectedFontSize}">
                      </ComboBox>

                      <ScrollBar Name="PART_HorizontalScrollBar"
                                 Orientation="Horizontal"
                                 Grid.Column="1"
                                 Value="{TemplateBinding HorizontalOffset}"
                                 Maximum="{TemplateBinding ScrollableWidth}"
                                 ViewportSize="{TemplateBinding ViewportWidth}"
                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                  </Grid>
                </Border>
              </ControlTemplate>
            </ScrollViewer.Template>
          </ScrollViewer>
          <ControlTemplate.Triggers>
            <Trigger Property="WordWrap" Value="True">
              <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type editing:TextArea}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="SelectionBrush" Value="{StaticResource SelectionBrush}" />
    <Setter Property="FlowDirection" Value="LeftToRight" />
    <Setter Property="SelectionBorder">
      <Setter.Value>
        <Pen Brush="#80ffffff" Thickness="1"/>
      </Setter.Value>
    </Setter>
    <Setter Property="SelectionForeground" Value="White"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type editing:TextArea}">
          <DockPanel Focusable="False">
            <ItemsControl DockPanel.Dock="Left"
						              Focusable="False"
						              ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LeftMargins}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
            </ItemsControl>
            <ContentPresenter
							Panel.ZIndex="-1"
							Focusable="False"
							Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextView}"/>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type editing:LineNumberMargin}">
    <Setter Property="Control.Cursor" Value="/ICSharpCode.AvalonEdit;component/themes/RightArrow.cur"/>
    <Setter Property="Margin" Value="9,0,15,0" />
  </Style>

  <Style TargetType="{x:Type ListBoxItem}" x:Key="CompletionListBoxItem">
    <Setter Property="Background" Value="Black" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="Black" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Name="Bd"
					        Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="{TemplateBinding BorderThickness}"
					        Padding="{TemplateBinding Padding}"
					        SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
          </Border>
          <!-- Simplified triggers:
 						we don't want a gray selection background when the ListBox doesn't have focus
					-->
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="Background" Value="#FF191919"/>
              <Setter Property="BorderBrush" TargetName="Bd" Value="#FFCCCCCC" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type AEComplete:CompletionList}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type AEComplete:CompletionList}">
          <AEComplete:CompletionListBox x:Name="PART_ListBox" ItemContainerStyle="{StaticResource CompletionListBoxItem}">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <ContentControl Content="{Binding Content}"/>
                </StackPanel>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </AEComplete:CompletionListBox>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>